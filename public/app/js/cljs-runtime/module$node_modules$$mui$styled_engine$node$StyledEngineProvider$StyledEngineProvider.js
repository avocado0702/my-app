shadow$provide.module$node_modules$$mui$styled_engine$node$StyledEngineProvider$StyledEngineProvider = function(global, require, module, exports) {
  function StyledEngineProvider(props) {
    const {injectFirst, children} = props;
    return injectFirst && cache ? (0,_jsxRuntime.jsx)(_react2.CacheProvider, {value:cache, children}) : children;
  }
  "use client";
  global = require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;
  module = require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard").default;
  Object.defineProperty(exports, "__esModule", {value:!0});
  exports.default = StyledEngineProvider;
  module(require("module$node_modules$react$index"));
  exports = global(require("module$node_modules$prop_types$index"));
  var _react2 = require("module$node_modules$$emotion$react$dist$emotion_react_browser_cjs"), _cache = global(require("module$node_modules$$emotion$cache$dist$emotion_cache_browser_cjs")), _sheet = require("module$node_modules$$emotion$sheet$dist$emotion_sheet_cjs"), _jsxRuntime = require("module$node_modules$react$jsx_runtime");
  require = options => {
    const cache = (0,_cache.default)(options);
    class MyStyleSheet extends _sheet.StyleSheet {
      constructor(args) {
        super(args);
        this.prepend = cache.sheet.prepend;
      }
    }
    cache.sheet = new MyStyleSheet({key:cache.key, nonce:cache.sheet.nonce, container:cache.sheet.container, speedy:cache.sheet.isSpeedy, prepend:cache.sheet.prepend, insertionPoint:cache.sheet.insertionPoint});
    return cache;
  };
  let cache;
  "object" === typeof document && (cache = require({key:"css", prepend:!0}));
  StyledEngineProvider.propTypes = {children:exports.default.node, injectFirst:exports.default.bool};
};

//# sourceMappingURL=module$node_modules$$mui$styled_engine$node$StyledEngineProvider$StyledEngineProvider.js.map
