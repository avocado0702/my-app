{
"version":3,
"file":"module$node_modules$$mui$system$cssVars$prepareCssVars.js",
"lineCount":63,
"mappings":"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",
"sources":["node_modules/@mui/system/cssVars/prepareCssVars.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$mui$system$cssVars$prepareCssVars\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _deepmerge = _interopRequireDefault(require(\"@mui/utils/deepmerge\"));\nvar _cssVarsParser = _interopRequireDefault(require(\"./cssVarsParser\"));\nfunction prepareCssVars(theme, parserConfig = {}) {\n  const {\n    getSelector = defaultGetSelector,\n    disableCssColorScheme,\n    colorSchemeSelector: selector\n  } = parserConfig;\n  // @ts-ignore - ignore components do not exist\n  const {\n    colorSchemes = {},\n    components,\n    defaultColorScheme = 'light',\n    ...otherTheme\n  } = theme;\n  const {\n    vars: rootVars,\n    css: rootCss,\n    varsWithDefaults: rootVarsWithDefaults\n  } = (0, _cssVarsParser.default)(otherTheme, parserConfig);\n  let themeVars = rootVarsWithDefaults;\n  const colorSchemesMap = {};\n  const {\n    [defaultColorScheme]: defaultScheme,\n    ...otherColorSchemes\n  } = colorSchemes;\n  Object.entries(otherColorSchemes || {}).forEach(([key, scheme]) => {\n    const {\n      vars,\n      css,\n      varsWithDefaults\n    } = (0, _cssVarsParser.default)(scheme, parserConfig);\n    themeVars = (0, _deepmerge.default)(themeVars, varsWithDefaults);\n    colorSchemesMap[key] = {\n      css,\n      vars\n    };\n  });\n  if (defaultScheme) {\n    // default color scheme vars should be merged last to set as default\n    const {\n      css,\n      vars,\n      varsWithDefaults\n    } = (0, _cssVarsParser.default)(defaultScheme, parserConfig);\n    themeVars = (0, _deepmerge.default)(themeVars, varsWithDefaults);\n    colorSchemesMap[defaultColorScheme] = {\n      css,\n      vars\n    };\n  }\n  function defaultGetSelector(colorScheme, cssObject) {\n    let rule = selector;\n    if (selector === 'class') {\n      rule = '.%s';\n    }\n    if (selector === 'data') {\n      rule = '[data-%s]';\n    }\n    if (selector?.startsWith('data-') && !selector.includes('%s')) {\n      // 'data-joy-color-scheme' -> '[data-joy-color-scheme=\"%s\"]'\n      rule = `[${selector}=\"%s\"]`;\n    }\n    if (colorScheme) {\n      if (rule === 'media') {\n        if (theme.defaultColorScheme === colorScheme) {\n          return ':root';\n        }\n        const mode = colorSchemes[colorScheme]?.palette?.mode || colorScheme;\n        return {\n          [`@media (prefers-color-scheme: ${mode})`]: {\n            ':root': cssObject\n          }\n        };\n      }\n      if (rule) {\n        if (theme.defaultColorScheme === colorScheme) {\n          return `:root, ${rule.replace('%s', String(colorScheme))}`;\n        }\n        return rule.replace('%s', String(colorScheme));\n      }\n    }\n    return ':root';\n  }\n  const generateThemeVars = () => {\n    let vars = {\n      ...rootVars\n    };\n    Object.entries(colorSchemesMap).forEach(([, {\n      vars: schemeVars\n    }]) => {\n      vars = (0, _deepmerge.default)(vars, schemeVars);\n    });\n    return vars;\n  };\n  const generateStyleSheets = () => {\n    const stylesheets = [];\n    const colorScheme = theme.defaultColorScheme || 'light';\n    function insertStyleSheet(key, css) {\n      if (Object.keys(css).length) {\n        stylesheets.push(typeof key === 'string' ? {\n          [key]: {\n            ...css\n          }\n        } : key);\n      }\n    }\n    insertStyleSheet(getSelector(undefined, {\n      ...rootCss\n    }), rootCss);\n    const {\n      [colorScheme]: defaultSchemeVal,\n      ...other\n    } = colorSchemesMap;\n    if (defaultSchemeVal) {\n      // default color scheme has to come before other color schemes\n      const {\n        css\n      } = defaultSchemeVal;\n      const cssColorSheme = colorSchemes[colorScheme]?.palette?.mode;\n      const finalCss = !disableCssColorScheme && cssColorSheme ? {\n        colorScheme: cssColorSheme,\n        ...css\n      } : {\n        ...css\n      };\n      insertStyleSheet(getSelector(colorScheme, {\n        ...finalCss\n      }), finalCss);\n    }\n    Object.entries(other).forEach(([key, {\n      css\n    }]) => {\n      const cssColorSheme = colorSchemes[key]?.palette?.mode;\n      const finalCss = !disableCssColorScheme && cssColorSheme ? {\n        colorScheme: cssColorSheme,\n        ...css\n      } : {\n        ...css\n      };\n      insertStyleSheet(getSelector(key, {\n        ...finalCss\n      }), finalCss);\n    });\n    return stylesheets;\n  };\n  return {\n    vars: themeVars,\n    generateThemeVars,\n    generateStyleSheets\n  };\n}\nvar _default = exports.default = prepareCssVars;\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","default","Object","defineProperty","value","_deepmerge","_cssVarsParser","prepareCssVars","theme","parserConfig","defaultGetSelector","colorScheme","cssObject","rule","selector","startsWith","includes","defaultColorScheme","colorSchemes","palette","mode","replace","String","getSelector","disableCssColorScheme","components","otherTheme","rootVars","rootCss","rootVarsWithDefaults","themeVars","colorSchemesMap","defaultScheme","otherColorSchemes","entries","forEach","key","scheme","vars","css","varsWithDefaults","generateThemeVars","schemeVars","generateStyleSheets","insertStyleSheet","keys","length","stylesheets","push","undefined","defaultSchemeVal","other","cssColorSheme","finalCss"]
}
