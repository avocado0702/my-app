shadow$provide.module$node_modules$$mui$material$node$Typography$Typography = function(global, require, module, exports) {
  "use client";
  global = require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;
  module = require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard").default;
  Object.defineProperty(exports, "__esModule", {value:!0});
  exports.default = exports.TypographyRoot = void 0;
  var React = module(require("module$node_modules$react$index"));
  module = global(require("module$node_modules$prop_types$index"));
  var _clsx = global(require("module$node_modules$clsx$dist$clsx")), _composeClasses = global(require("module$node_modules$$mui$utils$composeClasses$index")), _zeroStyled = require("module$node_modules$$mui$material$node$zero_styled$index"), _memoTheme = global(require("module$node_modules$$mui$material$node$utils$memoTheme")), _DefaultPropsProvider = require("module$node_modules$$mui$material$node$DefaultPropsProvider$index"), _capitalize = global(require("module$node_modules$$mui$material$node$utils$capitalize")), 
  _createSimplePaletteValueFilter = global(require("module$node_modules$$mui$material$node$utils$createSimplePaletteValueFilter")), _typographyClasses = require("module$node_modules$$mui$material$node$Typography$typographyClasses"), _jsxRuntime = require("module$node_modules$react$jsx_runtime");
  const v6Colors = {primary:!0, secondary:!0, error:!0, info:!0, success:!0, warning:!0, textPrimary:!0, textSecondary:!0, textDisabled:!0}, extendSxProp = (0,_zeroStyled.internal_createExtendSxProp)(), TypographyRoot = exports.TypographyRoot = (0,_zeroStyled.styled)("span", {name:"MuiTypography", slot:"Root", overridesResolver:(props, styles) => {
    ({ownerState:props} = props);
    return [styles.root, props.variant && styles[props.variant], "inherit" !== props.align && styles[`align${(0,_capitalize.default)(props.align)}`], props.noWrap && styles.noWrap, props.gutterBottom && styles.gutterBottom, props.paragraph && styles.paragraph];
  }})((0,_memoTheme.default)(({theme}) => ({margin:0, variants:[{props:{variant:"inherit"}, style:{font:"inherit", lineHeight:"inherit", letterSpacing:"inherit"}}, ...Object.entries(theme.typography).filter(([variant, value]) => "inherit" !== variant && value && "object" === typeof value).map(([variant, value]) => ({props:{variant}, style:value})), ...Object.entries(theme.palette).filter((0,_createSimplePaletteValueFilter.default)()).map(([color]) => ({props:{color}, style:{color:(theme.vars || theme).palette[color].main}})), 
  ...Object.entries(theme.palette?.text || {}).filter(([, value]) => "string" === typeof value).map(([color]) => ({props:{color:`text${(0,_capitalize.default)(color)}`}, style:{color:(theme.vars || theme).palette.text[color]}})), {props:({ownerState}) => "inherit" !== ownerState.align, style:{textAlign:"var(--Typography-textAlign)"}}, {props:({ownerState}) => ownerState.noWrap, style:{overflow:"hidden", textOverflow:"ellipsis", whiteSpace:"nowrap"}}, {props:({ownerState}) => ownerState.gutterBottom, 
  style:{marginBottom:"0.35em"}}, {props:({ownerState}) => ownerState.paragraph, style:{marginBottom:16}}]}))), defaultVariantMapping = {h1:"h1", h2:"h2", h3:"h3", h4:"h4", h5:"h5", h6:"h6", subtitle1:"h6", subtitle2:"h6", body1:"p", body2:"p", inherit:"p"};
  require = React.forwardRef(function(inProps, ref) {
    const {color, ...themeProps} = (0,_DefaultPropsProvider.useDefaultProps)({props:inProps, name:"MuiTypography"});
    inProps = extendSxProp({...themeProps, ...(!v6Colors[color] && {color})});
    const {align = "inherit", className, component, gutterBottom = !1, noWrap = !1, paragraph = !1, variant = "body1", variantMapping = defaultVariantMapping, ...other} = inProps;
    inProps = {...inProps, align, color, className, component, gutterBottom, noWrap, paragraph, variant, variantMapping};
    const Component = component || (paragraph ? "p" : variantMapping[variant] || defaultVariantMapping[variant]) || "span";
    const {align:align$jscomp$0, gutterBottom:gutterBottom$jscomp$0, noWrap:noWrap$jscomp$0, paragraph:paragraph$jscomp$0, variant:variant$jscomp$0, classes} = inProps;
    var JSCompiler_inline_result = {root:["root", variant$jscomp$0, "inherit" !== inProps.align && `align${(0,_capitalize.default)(align$jscomp$0)}`, gutterBottom$jscomp$0 && "gutterBottom", noWrap$jscomp$0 && "noWrap", paragraph$jscomp$0 && "paragraph"]};
    JSCompiler_inline_result = (0,_composeClasses.default)(JSCompiler_inline_result, _typographyClasses.getTypographyUtilityClass, classes);
    return (0,_jsxRuntime.jsx)(TypographyRoot, {as:Component, ref, className:(0,_clsx.default)(JSCompiler_inline_result.root, className), ...other, ownerState:inProps, style:{...("inherit" !== align && {"--Typography-textAlign":align}), ...other.style}});
  });
  require.propTypes = {align:module.default.oneOf(["center", "inherit", "justify", "left", "right"]), children:module.default.node, classes:module.default.object, className:module.default.string, color:module.default.oneOfType([module.default.oneOf("primary secondary success error info warning textPrimary textSecondary textDisabled".split(" ")), module.default.string]), component:module.default.elementType, gutterBottom:module.default.bool, noWrap:module.default.bool, paragraph:module.default.bool, 
  style:module.default.object, sx:module.default.oneOfType([module.default.arrayOf(module.default.oneOfType([module.default.func, module.default.object, module.default.bool])), module.default.func, module.default.object]), variant:module.default.oneOfType([module.default.oneOf("body1 body2 button caption h1 h2 h3 h4 h5 h6 inherit overline subtitle1 subtitle2".split(" ")), module.default.string]), variantMapping:module.default.object};
  exports.default = require;
};

//# sourceMappingURL=module$node_modules$$mui$material$node$Typography$Typography.js.map
