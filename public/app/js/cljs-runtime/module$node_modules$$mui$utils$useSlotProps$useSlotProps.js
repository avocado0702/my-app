shadow$provide.module$node_modules$$mui$utils$useSlotProps$useSlotProps = function(global, require, module, exports) {
  "use client";
  global = require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;
  Object.defineProperty(exports, "__esModule", {value:!0});
  exports.default = void 0;
  var _useForkRef = global(require("module$node_modules$$mui$utils$useForkRef$index")), _appendOwnerState = global(require("module$node_modules$$mui$utils$appendOwnerState$index")), _mergeSlotProps = global(require("module$node_modules$$mui$utils$mergeSlotProps$index")), _resolveComponentProps = global(require("module$node_modules$$mui$utils$resolveComponentProps$index"));
  exports.default = function(parameters) {
    const {elementType, externalSlotProps, ownerState, skipResolvingSlotProps = !1, ...other} = parameters, resolvedComponentsProps = skipResolvingSlotProps ? {} : (0,_resolveComponentProps.default)(externalSlotProps, ownerState), {props:mergedProps, internalRef} = (0,_mergeSlotProps.default)({...other, externalSlotProps:resolvedComponentsProps});
    parameters = (0,_useForkRef.default)(internalRef, resolvedComponentsProps?.ref, parameters.additionalProps?.ref);
    return (0,_appendOwnerState.default)(elementType, {...mergedProps, ref:parameters}, ownerState);
  };
};

//# sourceMappingURL=module$node_modules$$mui$utils$useSlotProps$useSlotProps.js.map
