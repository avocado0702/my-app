{
"version":3,
"file":"module$node_modules$$mui$styled_engine$node$StyledEngineProvider$StyledEngineProvider.js",
"lineCount":29,
"mappings":"AAAAA,cAAA,CAAA,qFAAA,GAA0G,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAsDlJC,UAASA,qBAAoB,CAACC,KAAD,CAAQ;AACnC,UAAM,CACJC,WADI,EAEJC,QAFI,CAAA,GAGFF,KAHJ;AAIA,WAAOC,WAAA,IAAeE,KAAf,GAAoC,GAAIC,WAAYC,CAAAA,GAAhB,EAAqBC,OAAQC,CAAAA,aAA7B,EAA4C,CACrFC,MAAOL,KAD8E,EAE3ED,QAF2E,CAA5C,CAApC,GAGFA,QAHL;AALmC;AApDrC,cAAA;AAEIO,QAAAA,GAAyBb,OAAA,CAAQ,kEAAR,CAAwDc,CAAAA,OAAjFD;AACAE,QAAAA,GAA0Bf,OAAA,CAAQ,mEAAR,CAAyDc,CAAAA,OAAnFC;AACJC,QAAOC,CAAAA,cAAP,CAAsBf,OAAtB,EAA+B,YAA/B,EAA6C,CAC3CU,MAAO,CAAA,CADoC,CAA7C,CAAA;AAGAV,SAAQY,CAAAA,OAAR,GAAkBX,oBAAlB;AACYY,QAAA,CAAwBf,OAAA,CAAQ,iCAAR,CAAxB,CAAA;AACRkB,SAAAA,GAAaL,MAAA,CAAuBb,OAAA,CAAQ,sCAAR,CAAvB,CAAbkB;AACJ,MAAIR,UAAUV,OAAA,CAAQ,mEAAR,CAAd,EACImB,SAASN,MAAA,CAAuBb,OAAA,CAAQ,mEAAR,CAAvB,CADb,EAEIoB,SAASpB,OAAA,CAAQ,2DAAR,CAFb,EAGIQ,cAAcR,OAAA,CAAQ,uCAAR,CAHlB;AAMMqB,SAAAA,GAAqBC,OAAAD,IAAW;AACpC,UAAMd,QAAQ,GAAIY,MAAOL,CAAAA,OAAX,EAAoBQ,OAApB,CAAd;AAOA,SAAMC,aAAN,QAA2BH,OAAOI,CAAAA,UAAlC;AACEC,iBAAW,CAACC,IAAD,CAAO;AAChB,aAAA,CAAMA,IAAN,CAAA;AACA,YAAKC,CAAAA,OAAL,GAAepB,KAAMqB,CAAAA,KAAMD,CAAAA,OAA3B;AAFgB;AADpB;AAQApB,SAAMqB,CAAAA,KAAN,GAAc,IAAIL,YAAJ,CAAiB,CAC7BM,IAAKtB,KAAMsB,CAAAA,GADkB,EAE7BC,MAAOvB,KAAMqB,CAAAA,KAAME,CAAAA,KAFU,EAG7BC,UAAWxB,KAAMqB,CAAAA,KAAMG,CAAAA,SAHM,EAI7BC,OAAQzB,KAAMqB,CAAAA,KAAMK,CAAAA,QAJS,EAK7BN,QAASpB,KAAMqB,CAAAA,KAAMD,CAAAA,OALQ,EAM7BO,eAAgB3B,KAAMqB,CAAAA,KAAMM,CAAAA,cANC,CAAjB,CAAd;AAQA,WAAO3B,KAAP;AAxBoC,GAAhCc;AA6BN,MAAId,KAAJ;AACwB,UAAxB,KAAI,MAAO4B,SAAX,KACE5B,KADF,GACUc,OAAA,CAAmB,CACzBQ,IAAK,KADoB,EAEzBF,QAAS,CAAA,CAFgB,CAAnB,CADV;AAgBwCxB,sBAAqBiC,CAAAA,SAA7D,GAAyE,CAIvE9B,SAAUY,OAAWJ,CAAAA,OAAQuB,CAAAA,IAJ0C,EAUvEhC,YAAaa,OAAWJ,CAAAA,OAAQwB,CAAAA,IAVuC,CAAzE;AAhEkJ,CAAlJ;;",
"sources":["node_modules/@mui/styled-engine/node/StyledEngineProvider/StyledEngineProvider.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$mui$styled_engine$node$StyledEngineProvider$StyledEngineProvider\"] = function(global,require,module,exports) {\n\"use strict\";\n'use client';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = StyledEngineProvider;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _react2 = require(\"@emotion/react\");\nvar _cache = _interopRequireDefault(require(\"@emotion/cache\"));\nvar _sheet = require(\"@emotion/sheet\");\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n// We might be able to remove this when this issue is fixed:\n// https://github.com/emotion-js/emotion/issues/2790\nconst createEmotionCache = options => {\n  const cache = (0, _cache.default)(options);\n\n  /**\n   * This is for client-side apps only.\n   * A custom sheet is required to make the GlobalStyles API work with `prepend: true`.\n   * This is because the [sheet](https://github.com/emotion-js/emotion/blob/main/packages/react/src/global.js#L94-L99) does not consume the options.\n   */\n  class MyStyleSheet extends _sheet.StyleSheet {\n    constructor(args) {\n      super(args);\n      this.prepend = cache.sheet.prepend;\n    }\n  }\n\n  // Do the same as https://github.com/emotion-js/emotion/blob/main/packages/cache/src/index.js#L238-L245\n  cache.sheet = new MyStyleSheet({\n    key: cache.key,\n    nonce: cache.sheet.nonce,\n    container: cache.sheet.container,\n    speedy: cache.sheet.isSpeedy,\n    prepend: cache.sheet.prepend,\n    insertionPoint: cache.sheet.insertionPoint\n  });\n  return cache;\n};\n\n// prepend: true moves MUI styles to the top of the <head> so they're loaded first.\n// It allows developers to easily override MUI styles with other styling solutions, like CSS modules.\nlet cache;\nif (typeof document === 'object') {\n  cache = createEmotionCache({\n    key: 'css',\n    prepend: true\n  });\n}\nfunction StyledEngineProvider(props) {\n  const {\n    injectFirst,\n    children\n  } = props;\n  return injectFirst && cache ? /*#__PURE__*/(0, _jsxRuntime.jsx)(_react2.CacheProvider, {\n    value: cache,\n    children: children\n  }) : children;\n}\nprocess.env.NODE_ENV !== \"production\" ? StyledEngineProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: _propTypes.default.node,\n  /**\n   * By default, the styles are injected last in the <head> element of the page.\n   * As a result, they gain more specificity than any other style sheet.\n   * If you want to override MUI's styles, set this prop.\n   */\n  injectFirst: _propTypes.default.bool\n} : void 0;\n};"],
"names":["shadow$provide","global","require","module","exports","StyledEngineProvider","props","injectFirst","children","cache","_jsxRuntime","jsx","_react2","CacheProvider","value","_interopRequireDefault","default","_interopRequireWildcard","Object","defineProperty","_propTypes","_cache","_sheet","createEmotionCache","options","MyStyleSheet","StyleSheet","constructor","args","prepend","sheet","key","nonce","container","speedy","isSpeedy","insertionPoint","document","propTypes","node","bool"]
}
