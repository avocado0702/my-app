shadow$provide.module$node_modules$$mui$material$node$Input$Input = function(global, require, module, exports) {
  "use client";
  var _interopRequireDefault = require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default, _interopRequireWildcard = require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard").default;
  Object.defineProperty(exports, "__esModule", {value:!0});
  exports.default = void 0;
  var React = _interopRequireWildcard(require("module$node_modules$react$index"));
  global = _interopRequireDefault(require("module$node_modules$prop_types$index"));
  var _composeClasses = _interopRequireDefault(require("module$node_modules$$mui$utils$composeClasses$index")), _deepmerge = _interopRequireDefault(require("module$node_modules$$mui$utils$deepmerge$index"));
  module = _interopRequireDefault(require("module$node_modules$$mui$utils$refType$index"));
  var _InputBase = _interopRequireDefault(require("module$node_modules$$mui$material$node$InputBase$index")), _rootShouldForwardProp = _interopRequireDefault(require("module$node_modules$$mui$material$node$styles$rootShouldForwardProp")), _zeroStyled = require("module$node_modules$$mui$material$node$zero_styled$index"), _memoTheme = _interopRequireDefault(require("module$node_modules$$mui$material$node$utils$memoTheme")), _createSimplePaletteValueFilter = _interopRequireDefault(require("module$node_modules$$mui$material$node$utils$createSimplePaletteValueFilter")), 
  _DefaultPropsProvider = require("module$node_modules$$mui$material$node$DefaultPropsProvider$index"), _inputClasses = _interopRequireWildcard(require("module$node_modules$$mui$material$node$Input$inputClasses")), _InputBase2 = require("module$node_modules$$mui$material$node$InputBase$InputBase"), _jsxRuntime = require("module$node_modules$react$jsx_runtime");
  const InputRoot = (0,_zeroStyled.styled)(_InputBase2.InputBaseRoot, {shouldForwardProp:prop => (0,_rootShouldForwardProp.default)(prop) || "classes" === prop, name:"MuiInput", slot:"Root", overridesResolver:(props, styles) => {
    const {ownerState} = props;
    return [...(0,_InputBase2.rootOverridesResolver)(props, styles), !ownerState.disableUnderline && styles.underline];
  }})((0,_memoTheme.default)(({theme}) => {
    let bottomLineColor = "light" === theme.palette.mode ? "rgba(0, 0, 0, 0.42)" : "rgba(255, 255, 255, 0.7)";
    theme.vars && (bottomLineColor = `rgba(${theme.vars.palette.common.onBackgroundChannel} / ${theme.vars.opacity.inputUnderline})`);
    return {position:"relative", variants:[{props:({ownerState}) => ownerState.formControl, style:{"label + \x26":{marginTop:16}}}, {props:({ownerState}) => !ownerState.disableUnderline, style:{"\x26::after":{left:0, bottom:0, content:'""', position:"absolute", right:0, transform:"scaleX(0)", transition:theme.transitions.create("transform", {duration:theme.transitions.duration.shorter, easing:theme.transitions.easing.easeOut}), pointerEvents:"none"}, [`&.${_inputClasses.default.focused}:after`]:{transform:"scaleX(1) translateX(0)"}, 
    [`&.${_inputClasses.default.error}`]:{"\x26::before, \x26::after":{borderBottomColor:(theme.vars || theme).palette.error.main}}, "\x26::before":{borderBottom:`1px solid ${bottomLineColor}`, left:0, bottom:0, content:'"\\00a0"', position:"absolute", right:0, transition:theme.transitions.create("border-bottom-color", {duration:theme.transitions.duration.shorter}), pointerEvents:"none"}, [`&:hover:not(.${_inputClasses.default.disabled}, .${_inputClasses.default.error}):before`]:{borderBottom:`2px solid ${(theme.vars || 
    theme).palette.text.primary}`, "@media (hover: none)":{borderBottom:`1px solid ${bottomLineColor}`}}, [`&.${_inputClasses.default.disabled}:before`]:{borderBottomStyle:"dotted"}}}, ...Object.entries(theme.palette).filter((0,_createSimplePaletteValueFilter.default)()).map(([color]) => ({props:{color, disableUnderline:!1}, style:{"\x26::after":{borderBottom:`2px solid ${(theme.vars || theme).palette[color].main}`}}}))]};
  })), InputInput = (0,_zeroStyled.styled)(_InputBase2.InputBaseInput, {name:"MuiInput", slot:"Input", overridesResolver:_InputBase2.inputOverridesResolver})({});
  require = React.forwardRef(function(inProps, ref) {
    inProps = (0,_DefaultPropsProvider.useDefaultProps)({props:inProps, name:"MuiInput"});
    const {disableUnderline = !1, components = {}, componentsProps:componentsPropsProp, fullWidth = !1, inputComponent = "input", multiline = !1, slotProps, slots = {}, type = "text", ...other} = inProps, {classes, disableUnderline:disableUnderline$jscomp$0} = inProps;
    inProps = (0,_composeClasses.default)({root:["root", !disableUnderline$jscomp$0 && "underline"], input:["input"]}, _inputClasses.getInputUtilityClass, classes);
    inProps = {...classes, ...inProps};
    var inputComponentsProps = {root:{ownerState:{disableUnderline}}};
    inputComponentsProps = slotProps ?? componentsPropsProp ? (0,_deepmerge.default)(slotProps ?? componentsPropsProp, inputComponentsProps) : inputComponentsProps;
    return (0,_jsxRuntime.jsx)(_InputBase.default, {slots:{root:slots.root ?? components.Root ?? InputRoot, input:slots.input ?? components.Input ?? InputInput}, slotProps:inputComponentsProps, fullWidth, inputComponent, multiline, ref, type, ...other, classes:inProps});
  });
  require.propTypes = {autoComplete:global.default.string, autoFocus:global.default.bool, classes:global.default.object, color:global.default.oneOfType([global.default.oneOf(["primary", "secondary"]), global.default.string]), components:global.default.shape({Input:global.default.elementType, Root:global.default.elementType}), componentsProps:global.default.shape({input:global.default.object, root:global.default.object}), defaultValue:global.default.any, disabled:global.default.bool, disableUnderline:global.default.bool, 
  endAdornment:global.default.node, error:global.default.bool, fullWidth:global.default.bool, id:global.default.string, inputComponent:global.default.elementType, inputProps:global.default.object, inputRef:module.default, margin:global.default.oneOf(["dense", "none"]), maxRows:global.default.oneOfType([global.default.number, global.default.string]), minRows:global.default.oneOfType([global.default.number, global.default.string]), multiline:global.default.bool, name:global.default.string, onChange:global.default.func, 
  placeholder:global.default.string, readOnly:global.default.bool, required:global.default.bool, rows:global.default.oneOfType([global.default.number, global.default.string]), slotProps:global.default.shape({input:global.default.object, root:global.default.object}), slots:global.default.shape({input:global.default.elementType, root:global.default.elementType}), startAdornment:global.default.node, sx:global.default.oneOfType([global.default.arrayOf(global.default.oneOfType([global.default.func, global.default.object, 
  global.default.bool])), global.default.func, global.default.object]), type:global.default.string, value:global.default.any};
  require && (require.muiName = "Input");
  exports.default = require;
};

//# sourceMappingURL=module$node_modules$$mui$material$node$Input$Input.js.map
