shadow$provide.module$node_modules$$mui$utils$getDisplayName$getDisplayName = function(global, require, module, exports) {
  function getFunctionComponentName(Component, fallback = "") {
    return Component.displayName || Component.name || fallback;
  }
  function getWrappedName(outerType, innerType, wrapperName) {
    innerType = getFunctionComponentName(innerType);
    return outerType.displayName || ("" !== innerType ? `${wrapperName}(${innerType})` : wrapperName);
  }
  Object.defineProperty(exports, "__esModule", {value:!0});
  exports.default = function(Component) {
    if (null != Component) {
      if ("string" === typeof Component) {
        return Component;
      }
      if ("function" === typeof Component) {
        return getFunctionComponentName(Component, "Component");
      }
      if ("object" === typeof Component) {
        switch(Component.$$typeof) {
          case _reactIs.ForwardRef:
            return getWrappedName(Component, Component.render, "ForwardRef");
          case _reactIs.Memo:
            return getWrappedName(Component, Component.type, "memo");
        }
      }
    }
  };
  var _reactIs = require("module$node_modules$react_is$index");
};

//# sourceMappingURL=module$node_modules$$mui$utils$getDisplayName$getDisplayName.js.map
