{
"version":3,
"file":"module$node_modules$$mui$utils$deepmerge$deepmerge.js",
"lineCount":30,
"mappings":"AAAAA,cAAA,CAAA,kDAAA,GAAuE,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAS/GC,UAASA,cAAa,CAACC,IAAD,CAAO;AAC3B,QAAoB,QAApB,KAAI,MAAOA,KAAX,IAAyC,IAAzC,KAAgCA,IAAhC;AACE,aAAO,CAAA,CAAP;AADF;AAGA,UAAMC,YAAYC,MAAOC,CAAAA,cAAP,CAAsBH,IAAtB,CAAlB;AACA,YAAsB,IAAtB,KAAQC,SAAR,IAA8BA,SAA9B,KAA4CC,MAAOD,CAAAA,SAAnD,IAAqG,IAArG,KAAgEC,MAAOC,CAAAA,cAAP,CAAsBF,SAAtB,CAAhE,KAA8G,EAAEG,MAAOC,CAAAA,WAAT,IAAwBL,IAAxB,CAA9G,IAA+I,EAAEI,MAAOE,CAAAA,QAAT,IAAqBN,IAArB,CAA/I;AAL2B;AAO7BO,UAASA,UAAS,CAACC,MAAD,CAAS;AACzB,QAAI,CAACT,aAAA,CAAcS,MAAd,CAAL;AACE,aAAOA,MAAP;AADF;AAGA,UAAMC,SAAS,EAAf;AACAP,UAAOQ,CAAAA,IAAP,CAAYF,MAAZ,CAAoBG,CAAAA,OAApB,CAA4BC,GAAA,IAAO;AACjCH,YAAA,CAAOG,GAAP,CAAA,GAAcL,SAAA,CAAUC,MAAA,CAAOI,GAAP,CAAV,CAAd;AADiC,KAAnC,CAAA;AAGA,WAAOH,MAAP;AARyB;AAU3BI,UAASA,UAAS,CAACC,MAAD,EAASN,MAAT,EAAiBO,OAAA,GAAU,CAC3CC,MAAO,CAAA,CADoC,CAA3B,CAEf;AACD,UAAMP,SAASM,OAAQC,CAAAA,KAAR,GAAgB,CAC7B,GAAGF,MAD0B,CAAhB,GAEXA,MAFJ;AAGIf,iBAAA,CAAce,MAAd,CAAJ,IAA6Bf,aAAA,CAAcS,MAAd,CAA7B,IACEN,MAAOQ,CAAAA,IAAP,CAAYF,MAAZ,CAAoBG,CAAAA,OAApB,CAA4BC,GAAA,IAAO;AAC7Bb,mBAAA,CAAcS,MAAA,CAAOI,GAAP,CAAd,CAAJ,IAEAV,MAAOD,CAAAA,SAAUgB,CAAAA,cAAeC,CAAAA,IAAhC,CAAqCJ,MAArC,EAA6CF,GAA7C,CAFA,IAEqDb,aAAA,CAAce,MAAA,CAAOF,GAAP,CAAd,CAFrD,GAIEH,MAAA,CAAOG,GAAP,CAJF,GAIgBC,SAAA,CAAUC,MAAA,CAAOF,GAAP,CAAV,EAAuBJ,MAAA,CAAOI,GAAP,CAAvB,EAAoCG,OAApC,CAJhB,GAMEN,MAAA,CAAOG,GAAP,CANF,GAKWG,OAAQC,CAAAA,KAAZ,GACSjB,aAAA,CAAcS,MAAA,CAAOI,GAAP,CAAd,CAAA,GAA6BL,SAAA,CAAUC,MAAA,CAAOI,GAAP,CAAV,CAA7B,GAAsDJ,MAAA,CAAOI,GAAP,CAD/D,GAGSJ,MAAA,CAAOI,GAAP,CARhB;AADiC,KAAnC,CADF;AAcA,WAAOH,MAAP;AAlBC;AAzBHP,QAAOiB,CAAAA,cAAP,CAAsBrB,OAAtB,EAA+B,YAA/B,EAA6C,CAC3CsB,MAAO,CAAA,CADoC,CAA7C,CAAA;AAGAtB,SAAQuB,CAAAA,OAAR,GAAkBR,SAAlB;AACAf,SAAQC,CAAAA,aAAR,GAAwBA,aAAxB;AAP+G,CAA/G;;",
"sources":["node_modules/@mui/utils/deepmerge/deepmerge.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$mui$utils$deepmerge$deepmerge\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = deepmerge;\nexports.isPlainObject = isPlainObject;\n// https://github.com/sindresorhus/is-plain-obj/blob/main/index.js\nfunction isPlainObject(item) {\n  if (typeof item !== 'object' || item === null) {\n    return false;\n  }\n  const prototype = Object.getPrototypeOf(item);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in item) && !(Symbol.iterator in item);\n}\nfunction deepClone(source) {\n  if (!isPlainObject(source)) {\n    return source;\n  }\n  const output = {};\n  Object.keys(source).forEach(key => {\n    output[key] = deepClone(source[key]);\n  });\n  return output;\n}\nfunction deepmerge(target, source, options = {\n  clone: true\n}) {\n  const output = options.clone ? {\n    ...target\n  } : target;\n  if (isPlainObject(target) && isPlainObject(source)) {\n    Object.keys(source).forEach(key => {\n      if (isPlainObject(source[key]) &&\n      // Avoid prototype pollution\n      Object.prototype.hasOwnProperty.call(target, key) && isPlainObject(target[key])) {\n        // Since `output` is a clone of `target` and we have narrowed `target` in this block we can cast to the same type.\n        output[key] = deepmerge(target[key], source[key], options);\n      } else if (options.clone) {\n        output[key] = isPlainObject(source[key]) ? deepClone(source[key]) : source[key];\n      } else {\n        output[key] = source[key];\n      }\n    });\n  }\n  return output;\n}\n};"],
"names":["shadow$provide","global","require","module","exports","isPlainObject","item","prototype","Object","getPrototypeOf","Symbol","toStringTag","iterator","deepClone","source","output","keys","forEach","key","deepmerge","target","options","clone","hasOwnProperty","call","defineProperty","value","default"]
}
