shadow$provide.module$node_modules$$mui$material$node$Modal$Modal = function(global, require, module, exports) {
  "use client";
  global = require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;
  module = require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard").default;
  Object.defineProperty(exports, "__esModule", {value:!0});
  exports.default = void 0;
  var React = module(require("module$node_modules$react$index"));
  module = global(require("module$node_modules$prop_types$index"));
  var _clsx = global(require("module$node_modules$clsx$dist$clsx")), _HTMLElementType = global(require("module$node_modules$$mui$utils$HTMLElementType$index")), _elementAcceptingRef = global(require("module$node_modules$$mui$utils$elementAcceptingRef$index")), _composeClasses = global(require("module$node_modules$$mui$utils$composeClasses$index")), _Unstable_TrapFocus = global(require("module$node_modules$$mui$material$node$Unstable_TrapFocus$index")), _Portal = global(require("module$node_modules$$mui$material$node$Portal$index")), 
  _zeroStyled = require("module$node_modules$$mui$material$node$zero_styled$index"), _memoTheme = global(require("module$node_modules$$mui$material$node$utils$memoTheme")), _DefaultPropsProvider = require("module$node_modules$$mui$material$node$DefaultPropsProvider$index"), _Backdrop = global(require("module$node_modules$$mui$material$node$Backdrop$index")), _useModal = global(require("module$node_modules$$mui$material$node$Modal$useModal")), _modalClasses = require("module$node_modules$$mui$material$node$Modal$modalClasses"), 
  _useSlot = global(require("module$node_modules$$mui$material$node$utils$useSlot")), _utils = require("module$node_modules$$mui$material$node$utils$index"), _jsxRuntime = require("module$node_modules$react$jsx_runtime");
  const useUtilityClasses = ownerState => {
    const {open, exited, classes} = ownerState;
    return (0,_composeClasses.default)({root:["root", !open && exited && "hidden"], backdrop:["backdrop"]}, _modalClasses.getModalUtilityClass, classes);
  }, ModalRoot = (0,_zeroStyled.styled)("div", {name:"MuiModal", slot:"Root", overridesResolver:(props, styles) => {
    ({ownerState:props} = props);
    return [styles.root, !props.open && props.exited && styles.hidden];
  }})((0,_memoTheme.default)(({theme}) => ({position:"fixed", zIndex:(theme.vars || theme).zIndex.modal, right:0, bottom:0, top:0, left:0, variants:[{props:({ownerState}) => !ownerState.open && ownerState.exited, style:{visibility:"hidden"}}]}))), ModalBackdrop = (0,_zeroStyled.styled)(_Backdrop.default, {name:"MuiModal", slot:"Backdrop", overridesResolver:(props, styles) => styles.backdrop})({zIndex:-1});
  require = React.forwardRef(function(inProps, ref) {
    inProps = (0,_DefaultPropsProvider.useDefaultProps)({name:"MuiModal", props:inProps});
    const {BackdropComponent = ModalBackdrop, BackdropProps, classes:classesProp, className, closeAfterTransition = !1, children, container, component, components = {}, componentsProps = {}, disableAutoFocus = !1, disableEnforceFocus = !1, disableEscapeKeyDown = !1, disablePortal = !1, disableRestoreFocus = !1, disableScrollLock = !1, hideBackdrop = !1, keepMounted = !1, onBackdropClick, onClose, onTransitionEnter, onTransitionExited, open, slotProps = {}, slots = {}, theme, ...other} = inProps;
    inProps = {...inProps, closeAfterTransition, disableAutoFocus, disableEnforceFocus, disableEscapeKeyDown, disablePortal, disableRestoreFocus, disableScrollLock, hideBackdrop, keepMounted};
    const {getRootProps, getBackdropProps, getTransitionProps, portalRef, isTopModal, exited, hasTransition} = (0,_useModal.default)({...inProps, rootRef:ref}), ownerState = {...inProps, exited}, classes = useUtilityClasses(ownerState);
    inProps = {};
    void 0 === children.props.tabIndex && (inProps.tabIndex = "-1");
    if (hasTransition) {
      const {onEnter, onExited} = getTransitionProps();
      inProps.onEnter = onEnter;
      inProps.onExited = onExited;
    }
    const externalForwardedProps = {...other, slots:{root:components.Root, backdrop:components.Backdrop, ...slots}, slotProps:{...componentsProps, ...slotProps}}, [RootSlot, rootProps] = (0,_useSlot.default)("root", {elementType:ModalRoot, externalForwardedProps, getSlotProps:getRootProps, additionalProps:{ref, as:component}, ownerState, className:(0,_clsx.default)(className, classes?.root, !ownerState.open && ownerState.exited && classes?.hidden)}), [BackdropSlot, backdropProps] = (0,_useSlot.default)("backdrop", 
    {elementType:BackdropComponent, externalForwardedProps, additionalProps:BackdropProps, getSlotProps:otherHandlers => getBackdropProps({...otherHandlers, onClick:event => {
      onBackdropClick && onBackdropClick(event);
      if (otherHandlers?.onClick) {
        otherHandlers.onClick(event);
      }
    }}), className:(0,_clsx.default)(BackdropProps?.className, classes?.backdrop), ownerState});
    ref = (0,_utils.useForkRef)(BackdropProps?.ref, backdropProps.ref);
    return keepMounted || open || hasTransition && !exited ? (0,_jsxRuntime.jsx)(_Portal.default, {ref:portalRef, container, disablePortal, children:(0,_jsxRuntime.jsxs)(RootSlot, {...rootProps, children:[!hideBackdrop && BackdropComponent ? (0,_jsxRuntime.jsx)(BackdropSlot, {...backdropProps, ref}) : null, (0,_jsxRuntime.jsx)(_Unstable_TrapFocus.default, {disableEnforceFocus, disableAutoFocus, disableRestoreFocus, isEnabled:isTopModal, open, children:React.cloneElement(children, inProps)})]})}) : 
    null;
  });
  require.propTypes = {BackdropComponent:module.default.elementType, BackdropProps:module.default.object, children:_elementAcceptingRef.default.isRequired, classes:module.default.object, className:module.default.string, closeAfterTransition:module.default.bool, component:module.default.elementType, components:module.default.shape({Backdrop:module.default.elementType, Root:module.default.elementType}), componentsProps:module.default.shape({backdrop:module.default.oneOfType([module.default.func, module.default.object]), 
  root:module.default.oneOfType([module.default.func, module.default.object])}), container:module.default.oneOfType([_HTMLElementType.default, module.default.func]), disableAutoFocus:module.default.bool, disableEnforceFocus:module.default.bool, disableEscapeKeyDown:module.default.bool, disablePortal:module.default.bool, disableRestoreFocus:module.default.bool, disableScrollLock:module.default.bool, hideBackdrop:module.default.bool, keepMounted:module.default.bool, onBackdropClick:module.default.func, 
  onClose:module.default.func, onTransitionEnter:module.default.func, onTransitionExited:module.default.func, open:module.default.bool.isRequired, slotProps:module.default.shape({backdrop:module.default.oneOfType([module.default.func, module.default.object]), root:module.default.oneOfType([module.default.func, module.default.object])}), slots:module.default.shape({backdrop:module.default.elementType, root:module.default.elementType}), sx:module.default.oneOfType([module.default.arrayOf(module.default.oneOfType([module.default.func, 
  module.default.object, module.default.bool])), module.default.func, module.default.object])};
  exports.default = require;
};

//# sourceMappingURL=module$node_modules$$mui$material$node$Modal$Modal.js.map
