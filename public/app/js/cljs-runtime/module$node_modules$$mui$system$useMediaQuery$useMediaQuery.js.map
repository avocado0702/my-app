{
"version":3,
"file":"module$node_modules$$mui$system$useMediaQuery$useMediaQuery.js",
"lineCount":59,
"mappings":"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",
"sources":["node_modules/@mui/system/useMediaQuery/useMediaQuery.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$mui$system$useMediaQuery$useMediaQuery\"] = function(global,require,module,exports) {\n\"use strict\";\n'use client';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useMediaQuery;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _useEnhancedEffect = _interopRequireDefault(require(\"@mui/utils/useEnhancedEffect\"));\nvar _useThemeProps = require(\"../useThemeProps\");\nvar _useThemeWithoutDefault = _interopRequireDefault(require(\"../useThemeWithoutDefault\"));\n// TODO React 17: Remove `useMediaQueryOld` once React 17 support is removed\nfunction useMediaQueryOld(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr) {\n  const [match, setMatch] = React.useState(() => {\n    if (noSsr && matchMedia) {\n      return matchMedia(query).matches;\n    }\n    if (ssrMatchMedia) {\n      return ssrMatchMedia(query).matches;\n    }\n\n    // Once the component is mounted, we rely on the\n    // event listeners to return the correct matches value.\n    return defaultMatches;\n  });\n  (0, _useEnhancedEffect.default)(() => {\n    if (!matchMedia) {\n      return undefined;\n    }\n    const queryList = matchMedia(query);\n    const updateMatch = () => {\n      setMatch(queryList.matches);\n    };\n    updateMatch();\n    queryList.addEventListener('change', updateMatch);\n    return () => {\n      queryList.removeEventListener('change', updateMatch);\n    };\n  }, [query, matchMedia]);\n  return match;\n}\n\n// See https://github.com/mui/material-ui/issues/41190#issuecomment-2040873379 for why\nconst safeReact = {\n  ...React\n};\nconst maybeReactUseSyncExternalStore = safeReact.useSyncExternalStore;\nfunction useMediaQueryNew(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr) {\n  const getDefaultSnapshot = React.useCallback(() => defaultMatches, [defaultMatches]);\n  const getServerSnapshot = React.useMemo(() => {\n    if (noSsr && matchMedia) {\n      return () => matchMedia(query).matches;\n    }\n    if (ssrMatchMedia !== null) {\n      const {\n        matches\n      } = ssrMatchMedia(query);\n      return () => matches;\n    }\n    return getDefaultSnapshot;\n  }, [getDefaultSnapshot, query, ssrMatchMedia, noSsr, matchMedia]);\n  const [getSnapshot, subscribe] = React.useMemo(() => {\n    if (matchMedia === null) {\n      return [getDefaultSnapshot, () => () => {}];\n    }\n    const mediaQueryList = matchMedia(query);\n    return [() => mediaQueryList.matches, notify => {\n      mediaQueryList.addEventListener('change', notify);\n      return () => {\n        mediaQueryList.removeEventListener('change', notify);\n      };\n    }];\n  }, [getDefaultSnapshot, matchMedia, query]);\n  const match = maybeReactUseSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n  return match;\n}\nfunction useMediaQuery(queryInput, options = {}) {\n  const theme = (0, _useThemeWithoutDefault.default)();\n  // Wait for jsdom to support the match media feature.\n  // All the browsers MUI support have this built-in.\n  // This defensive check is here for simplicity.\n  // Most of the time, the match media logic isn't central to people tests.\n  const supportMatchMedia = typeof window !== 'undefined' && typeof window.matchMedia !== 'undefined';\n  const {\n    defaultMatches = false,\n    matchMedia = supportMatchMedia ? window.matchMedia : null,\n    ssrMatchMedia = null,\n    noSsr = false\n  } = (0, _useThemeProps.getThemeProps)({\n    name: 'MuiUseMediaQuery',\n    props: options,\n    theme\n  });\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof queryInput === 'function' && theme === null) {\n      console.error(['MUI: The `query` argument provided is invalid.', 'You are providing a function without a theme in the context.', 'One of the parent elements needs to use a ThemeProvider.'].join('\\n'));\n    }\n  }\n  let query = typeof queryInput === 'function' ? queryInput(theme) : queryInput;\n  query = query.replace(/^@media( ?)/m, '');\n  const useMediaQueryImplementation = maybeReactUseSyncExternalStore !== undefined ? useMediaQueryNew : useMediaQueryOld;\n  const match = useMediaQueryImplementation(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr);\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue({\n      query,\n      match\n    });\n  }\n  return match;\n}\n};"],
"names":["shadow$provide","global","require","module","exports","useMediaQueryOld","query","defaultMatches","matchMedia","ssrMatchMedia","noSsr","match","setMatch","React","useState","matches","_useEnhancedEffect","default","queryList","updateMatch","addEventListener","removeEventListener","useMediaQueryNew","getDefaultSnapshot","useCallback","getServerSnapshot","useMemo","getSnapshot","subscribe","mediaQueryList","notify","maybeReactUseSyncExternalStore","_interopRequireDefault","_interopRequireWildcard","Object","defineProperty","value","useMediaQuery","queryInput","options","theme","_useThemeWithoutDefault","supportMatchMedia","window","_useThemeProps","getThemeProps","name","props","console","error","replace","undefined","useMediaQueryImplementation","useDebugValue","safeReact","useSyncExternalStore"]
}
