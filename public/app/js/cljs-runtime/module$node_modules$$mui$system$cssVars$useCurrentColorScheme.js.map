{
"version":3,
"file":"module$node_modules$$mui$system$cssVars$useCurrentColorScheme.js",
"lineCount":141,
"mappings":"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",
"sources":["node_modules/@mui/system/cssVars/useCurrentColorScheme.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$mui$system$cssVars$useCurrentColorScheme\"] = function(global,require,module,exports) {\n\"use strict\";\n'use client';\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useCurrentColorScheme;\nexports.getColorScheme = getColorScheme;\nexports.getSystemMode = getSystemMode;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _InitColorSchemeScript = require(\"../InitColorSchemeScript/InitColorSchemeScript\");\nfunction getSystemMode(mode) {\n  if (typeof window !== 'undefined' && typeof window.matchMedia === 'function' && mode === 'system') {\n    const mql = window.matchMedia('(prefers-color-scheme: dark)');\n    if (mql.matches) {\n      return 'dark';\n    }\n    return 'light';\n  }\n  return undefined;\n}\nfunction processState(state, callback) {\n  if (state.mode === 'light' || state.mode === 'system' && state.systemMode === 'light') {\n    return callback('light');\n  }\n  if (state.mode === 'dark' || state.mode === 'system' && state.systemMode === 'dark') {\n    return callback('dark');\n  }\n  return undefined;\n}\nfunction getColorScheme(state) {\n  return processState(state, mode => {\n    if (mode === 'light') {\n      return state.lightColorScheme;\n    }\n    if (mode === 'dark') {\n      return state.darkColorScheme;\n    }\n    return undefined;\n  });\n}\nfunction initializeValue(key, defaultValue) {\n  if (typeof window === 'undefined') {\n    return undefined;\n  }\n  let value;\n  try {\n    value = localStorage.getItem(key) || undefined;\n    if (!value) {\n      // the first time that user enters the site.\n      localStorage.setItem(key, defaultValue);\n    }\n  } catch {\n    // Unsupported\n  }\n  return value || defaultValue;\n}\nfunction useCurrentColorScheme(options) {\n  const {\n    defaultMode = 'light',\n    defaultLightColorScheme,\n    defaultDarkColorScheme,\n    supportedColorSchemes = [],\n    modeStorageKey = _InitColorSchemeScript.DEFAULT_MODE_STORAGE_KEY,\n    colorSchemeStorageKey = _InitColorSchemeScript.DEFAULT_COLOR_SCHEME_STORAGE_KEY,\n    storageWindow = typeof window === 'undefined' ? undefined : window\n  } = options;\n  const joinedColorSchemes = supportedColorSchemes.join(',');\n  const isMultiSchemes = supportedColorSchemes.length > 1;\n  const [state, setState] = React.useState(() => {\n    const initialMode = initializeValue(modeStorageKey, defaultMode);\n    const lightColorScheme = initializeValue(`${colorSchemeStorageKey}-light`, defaultLightColorScheme);\n    const darkColorScheme = initializeValue(`${colorSchemeStorageKey}-dark`, defaultDarkColorScheme);\n    return {\n      mode: initialMode,\n      systemMode: getSystemMode(initialMode),\n      lightColorScheme,\n      darkColorScheme\n    };\n  });\n  // This could be improved with `React.useSyncExternalStore` in the future.\n  const [, setHasMounted] = React.useState(false);\n  const hasMounted = React.useRef(false);\n  React.useEffect(() => {\n    if (isMultiSchemes) {\n      setHasMounted(true); // to rerender the component after hydration\n    }\n    hasMounted.current = true;\n  }, [isMultiSchemes]);\n  const colorScheme = getColorScheme(state);\n  const setMode = React.useCallback(mode => {\n    setState(currentState => {\n      if (mode === currentState.mode) {\n        // do nothing if mode does not change\n        return currentState;\n      }\n      const newMode = mode ?? defaultMode;\n      try {\n        localStorage.setItem(modeStorageKey, newMode);\n      } catch {\n        // Unsupported\n      }\n      return {\n        ...currentState,\n        mode: newMode,\n        systemMode: getSystemMode(newMode)\n      };\n    });\n  }, [modeStorageKey, defaultMode]);\n  const setColorScheme = React.useCallback(value => {\n    if (!value) {\n      setState(currentState => {\n        try {\n          localStorage.setItem(`${colorSchemeStorageKey}-light`, defaultLightColorScheme);\n          localStorage.setItem(`${colorSchemeStorageKey}-dark`, defaultDarkColorScheme);\n        } catch {\n          // Unsupported\n        }\n        return {\n          ...currentState,\n          lightColorScheme: defaultLightColorScheme,\n          darkColorScheme: defaultDarkColorScheme\n        };\n      });\n    } else if (typeof value === 'string') {\n      if (value && !joinedColorSchemes.includes(value)) {\n        console.error(`\\`${value}\\` does not exist in \\`theme.colorSchemes\\`.`);\n      } else {\n        setState(currentState => {\n          const newState = {\n            ...currentState\n          };\n          processState(currentState, mode => {\n            try {\n              localStorage.setItem(`${colorSchemeStorageKey}-${mode}`, value);\n            } catch {\n              // Unsupported\n            }\n            if (mode === 'light') {\n              newState.lightColorScheme = value;\n            }\n            if (mode === 'dark') {\n              newState.darkColorScheme = value;\n            }\n          });\n          return newState;\n        });\n      }\n    } else {\n      setState(currentState => {\n        const newState = {\n          ...currentState\n        };\n        const newLightColorScheme = value.light === null ? defaultLightColorScheme : value.light;\n        const newDarkColorScheme = value.dark === null ? defaultDarkColorScheme : value.dark;\n        if (newLightColorScheme) {\n          if (!joinedColorSchemes.includes(newLightColorScheme)) {\n            console.error(`\\`${newLightColorScheme}\\` does not exist in \\`theme.colorSchemes\\`.`);\n          } else {\n            newState.lightColorScheme = newLightColorScheme;\n            try {\n              localStorage.setItem(`${colorSchemeStorageKey}-light`, newLightColorScheme);\n            } catch (error) {\n              // Unsupported\n            }\n          }\n        }\n        if (newDarkColorScheme) {\n          if (!joinedColorSchemes.includes(newDarkColorScheme)) {\n            console.error(`\\`${newDarkColorScheme}\\` does not exist in \\`theme.colorSchemes\\`.`);\n          } else {\n            newState.darkColorScheme = newDarkColorScheme;\n            try {\n              localStorage.setItem(`${colorSchemeStorageKey}-dark`, newDarkColorScheme);\n            } catch (error) {\n              // Unsupported\n            }\n          }\n        }\n        return newState;\n      });\n    }\n  }, [joinedColorSchemes, colorSchemeStorageKey, defaultLightColorScheme, defaultDarkColorScheme]);\n  const handleMediaQuery = React.useCallback(event => {\n    if (state.mode === 'system') {\n      setState(currentState => {\n        const systemMode = event?.matches ? 'dark' : 'light';\n\n        // Early exit, nothing changed.\n        if (currentState.systemMode === systemMode) {\n          return currentState;\n        }\n        return {\n          ...currentState,\n          systemMode\n        };\n      });\n    }\n  }, [state.mode]);\n\n  // Ref hack to avoid adding handleMediaQuery as a dep\n  const mediaListener = React.useRef(handleMediaQuery);\n  mediaListener.current = handleMediaQuery;\n  React.useEffect(() => {\n    if (typeof window.matchMedia !== 'function' || !isMultiSchemes) {\n      return undefined;\n    }\n    const handler = (...args) => mediaListener.current(...args);\n\n    // Always listen to System preference\n    const media = window.matchMedia('(prefers-color-scheme: dark)');\n\n    // Intentionally use deprecated listener methods to support iOS & old browsers\n    media.addListener(handler);\n    handler(media);\n    return () => {\n      media.removeListener(handler);\n    };\n  }, [isMultiSchemes]);\n\n  // Handle when localStorage has changed\n  React.useEffect(() => {\n    if (storageWindow && isMultiSchemes) {\n      const handleStorage = event => {\n        const value = event.newValue;\n        if (typeof event.key === 'string' && event.key.startsWith(colorSchemeStorageKey) && (!value || joinedColorSchemes.match(value))) {\n          // If the key is deleted, value will be null then reset color scheme to the default one.\n          if (event.key.endsWith('light')) {\n            setColorScheme({\n              light: value\n            });\n          }\n          if (event.key.endsWith('dark')) {\n            setColorScheme({\n              dark: value\n            });\n          }\n        }\n        if (event.key === modeStorageKey && (!value || ['light', 'dark', 'system'].includes(value))) {\n          setMode(value || defaultMode);\n        }\n      };\n      // For syncing color-scheme changes between iframes\n      storageWindow.addEventListener('storage', handleStorage);\n      return () => {\n        storageWindow.removeEventListener('storage', handleStorage);\n      };\n    }\n    return undefined;\n  }, [setColorScheme, setMode, modeStorageKey, colorSchemeStorageKey, joinedColorSchemes, defaultMode, storageWindow, isMultiSchemes]);\n  return {\n    ...state,\n    mode: hasMounted.current || !isMultiSchemes ? state.mode : undefined,\n    systemMode: hasMounted.current || !isMultiSchemes ? state.systemMode : undefined,\n    colorScheme: hasMounted.current || !isMultiSchemes ? colorScheme : undefined,\n    setMode,\n    setColorScheme\n  };\n}\n};"],
"names":["shadow$provide","global","require","module","exports","getSystemMode","mode","window","matchMedia","mql","matches","processState","state","callback","systemMode","getColorScheme","lightColorScheme","darkColorScheme","initializeValue","key","defaultValue","value","localStorage","getItem","undefined","setItem","_interopRequireWildcard","default","Object","defineProperty","useCurrentColorScheme","options","defaultMode","defaultLightColorScheme","defaultDarkColorScheme","supportedColorSchemes","modeStorageKey","_InitColorSchemeScript","DEFAULT_MODE_STORAGE_KEY","colorSchemeStorageKey","DEFAULT_COLOR_SCHEME_STORAGE_KEY","storageWindow","joinedColorSchemes","join","isMultiSchemes","length","setState","React","useState","initialMode","setHasMounted","hasMounted","useRef","useEffect","current","colorScheme","setMode","useCallback","currentState","newMode","setColorScheme","includes","console","error","newState","newLightColorScheme","light","newDarkColorScheme","dark","handleMediaQuery","event","mediaListener","handler","args","media","addListener","removeListener","handleStorage","newValue","startsWith","match","endsWith","addEventListener","removeEventListener"]
}
