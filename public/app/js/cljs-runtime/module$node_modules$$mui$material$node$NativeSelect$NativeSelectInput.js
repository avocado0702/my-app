shadow$provide.module$node_modules$$mui$material$node$NativeSelect$NativeSelectInput = function(global, require, module, exports) {
  "use client";
  var _interopRequireDefault = require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default, _interopRequireWildcard = require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard").default;
  Object.defineProperty(exports, "__esModule", {value:!0});
  exports.default = exports.StyledSelectSelect = exports.StyledSelectIcon = void 0;
  var React = _interopRequireWildcard(require("module$node_modules$react$index"));
  global = _interopRequireDefault(require("module$node_modules$prop_types$index"));
  var _clsx = _interopRequireDefault(require("module$node_modules$clsx$dist$clsx"));
  module = _interopRequireDefault(require("module$node_modules$$mui$utils$refType$index"));
  var _composeClasses = _interopRequireDefault(require("module$node_modules$$mui$utils$composeClasses$index")), _capitalize = _interopRequireDefault(require("module$node_modules$$mui$material$node$utils$capitalize")), _nativeSelectClasses = _interopRequireWildcard(require("module$node_modules$$mui$material$node$NativeSelect$nativeSelectClasses"));
  _interopRequireWildcard = require("module$node_modules$$mui$material$node$zero_styled$index");
  _interopRequireDefault = _interopRequireDefault(require("module$node_modules$$mui$material$node$styles$rootShouldForwardProp"));
  var _jsxRuntime = require("module$node_modules$react$jsx_runtime");
  require = exports.StyledSelectSelect = (0,_interopRequireWildcard.styled)("select")(({theme}) => ({MozAppearance:"none", WebkitAppearance:"none", userSelect:"none", borderRadius:0, cursor:"pointer", "\x26:focus":{borderRadius:0}, [`&.${_nativeSelectClasses.default.disabled}`]:{cursor:"default"}, "\x26[multiple]":{height:"auto"}, "\x26:not([multiple]) option, \x26:not([multiple]) optgroup":{backgroundColor:(theme.vars || theme).palette.background.paper}, variants:[{props:({ownerState}) => "filled" !== 
  ownerState.variant && "outlined" !== ownerState.variant, style:{"\x26\x26\x26":{paddingRight:24, minWidth:16}}}, {props:{variant:"filled"}, style:{"\x26\x26\x26":{paddingRight:32}}}, {props:{variant:"outlined"}, style:{borderRadius:(theme.vars || theme).shape.borderRadius, "\x26:focus":{borderRadius:(theme.vars || theme).shape.borderRadius}, "\x26\x26\x26":{paddingRight:32}}}]}));
  const NativeSelectSelect = (0,_interopRequireWildcard.styled)(require, {name:"MuiNativeSelect", slot:"Select", shouldForwardProp:_interopRequireDefault.default, overridesResolver:(props, styles) => {
    ({ownerState:props} = props);
    return [styles.select, styles[props.variant], props.error && styles.error, {[`&.${_nativeSelectClasses.default.multiple}`]:styles.multiple}];
  }})({});
  require = exports.StyledSelectIcon = (0,_interopRequireWildcard.styled)("svg")(({theme}) => ({position:"absolute", right:0, top:"calc(50% - .5em)", pointerEvents:"none", color:(theme.vars || theme).palette.action.active, [`&.${_nativeSelectClasses.default.disabled}`]:{color:(theme.vars || theme).palette.action.disabled}, variants:[{props:({ownerState}) => ownerState.open, style:{transform:"rotate(180deg)"}}, {props:{variant:"filled"}, style:{right:7}}, {props:{variant:"outlined"}, style:{right:7}}]}));
  const NativeSelectIcon = (0,_interopRequireWildcard.styled)(require, {name:"MuiNativeSelect", slot:"Icon", overridesResolver:(props, styles) => {
    ({ownerState:props} = props);
    return [styles.icon, props.variant && styles[`icon${(0,_capitalize.default)(props.variant)}`], props.open && styles.iconOpen];
  }})({});
  require = React.forwardRef(function(props, ref) {
    const {className, disabled, error, IconComponent, inputRef, variant = "standard", ...other} = props, ownerState = {...props, disabled, variant, error};
    const {classes, variant:variant$jscomp$0, disabled:disabled$jscomp$0, multiple, open, error:error$jscomp$0} = ownerState;
    var JSCompiler_inline_result = {select:["select", variant$jscomp$0, disabled$jscomp$0 && "disabled", multiple && "multiple", error$jscomp$0 && "error"], icon:["icon", `icon${(0,_capitalize.default)(variant$jscomp$0)}`, open && "iconOpen", disabled$jscomp$0 && "disabled"]};
    JSCompiler_inline_result = (0,_composeClasses.default)(JSCompiler_inline_result, _nativeSelectClasses.getNativeSelectUtilityClasses, classes);
    return (0,_jsxRuntime.jsxs)(React.Fragment, {children:[(0,_jsxRuntime.jsx)(NativeSelectSelect, {ownerState, className:(0,_clsx.default)(JSCompiler_inline_result.select, className), disabled, ref:inputRef || ref, ...other}), props.multiple ? null : (0,_jsxRuntime.jsx)(NativeSelectIcon, {as:IconComponent, ownerState, className:JSCompiler_inline_result.icon})]});
  });
  require.propTypes = {children:global.default.node, classes:global.default.object, className:global.default.string, disabled:global.default.bool, error:global.default.bool, IconComponent:global.default.elementType.isRequired, inputRef:module.default, multiple:global.default.bool, name:global.default.string, onChange:global.default.func, value:global.default.any, variant:global.default.oneOf(["standard", "outlined", "filled"])};
  exports.default = require;
};

//# sourceMappingURL=module$node_modules$$mui$material$node$NativeSelect$NativeSelectInput.js.map
