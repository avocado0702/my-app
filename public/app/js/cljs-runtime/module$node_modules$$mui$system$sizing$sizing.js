shadow$provide.module$node_modules$$mui$system$sizing$sizing = function(global, require, module, exports) {
  function sizingTransform(value) {
    return 1 >= value && 0 !== value ? `${100 * value}%` : value;
  }
  module = require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;
  Object.defineProperty(exports, "__esModule", {value:!0});
  exports.sizeWidth = exports.sizeHeight = exports.minWidth = exports.minHeight = exports.maxWidth = exports.maxHeight = exports.height = exports.default = exports.boxSizing = void 0;
  exports.sizingTransform = sizingTransform;
  exports.width = void 0;
  global = module(require("module$node_modules$$mui$system$style$index"));
  module = module(require("module$node_modules$$mui$system$compose$index"));
  var _breakpoints = require("module$node_modules$$mui$system$breakpoints$index");
  require = exports.width = (0,global.default)({prop:"width", transform:sizingTransform});
  const maxWidth = props => void 0 !== props.maxWidth && null !== props.maxWidth ? (0,_breakpoints.handleBreakpoints)(props, props.maxWidth, propValue => {
    const breakpoint = props.theme?.breakpoints?.values?.[propValue] || _breakpoints.values[propValue];
    return breakpoint ? "px" !== props.theme?.breakpoints?.unit ? {maxWidth:`${breakpoint}${props.theme.breakpoints.unit}`} : {maxWidth:breakpoint} : {maxWidth:sizingTransform(propValue)};
  }) : null;
  exports.maxWidth = maxWidth;
  maxWidth.filterProps = ["maxWidth"];
  const minWidth = exports.minWidth = (0,global.default)({prop:"minWidth", transform:sizingTransform}), height = exports.height = (0,global.default)({prop:"height", transform:sizingTransform}), maxHeight = exports.maxHeight = (0,global.default)({prop:"maxHeight", transform:sizingTransform}), minHeight = exports.minHeight = (0,global.default)({prop:"minHeight", transform:sizingTransform});
  exports.sizeWidth = (0,global.default)({prop:"size", cssProperty:"width", transform:sizingTransform});
  exports.sizeHeight = (0,global.default)({prop:"size", cssProperty:"height", transform:sizingTransform});
  global = exports.boxSizing = (0,global.default)({prop:"boxSizing"});
  global = (0,module.default)(require, maxWidth, minWidth, height, maxHeight, minHeight, global);
  exports.default = global;
};

//# sourceMappingURL=module$node_modules$$mui$system$sizing$sizing.js.map
