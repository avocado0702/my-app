{"version":3,"sources":["main/core/components/plan_info.cljs"],"mappings":"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","names":["main.core.components.plan-info/edit-btn","js/module$node_modules$$mui$material$node$Button$index.default","re-frame.core/dispatch","main.core.components.plan-info/save-btn","selected-item-id","edited-title","edited-text","edited-tasks","cljs.core/deref","main.core.components.plan-info/back-btn","main.core.components.plan-info/plan-info","edit-mode","re_frame.core.subscribe","reagent.core.atom","last-item-id","current-plan","and__5000__auto__","cljs.core.not_EQ_","cljs.core/reset!","p1__29316#","p1__29317#","js/module$node_modules$$mui$material$node$TextField$index.default","main.core.components.tasks-manager/task-manager","js/module$node_modules$$mui$material$node$ButtonGroup$index.default","cljs.core/seq","iter__5480__auto__","s__29319","cljs.core/LazySeq","temp__5804__auto__","cljs.core/chunked-seq?","c__5478__auto__","size__5479__auto__","cljs.core/count","b__29321","cljs.core/chunk-buffer","i__29320","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__29318","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","task","js/module$node_modules$$mui$material$node$FormControlLabel$index.default","reagent.core.as_element","js/module$node_modules$$mui$material$node$Checkbox$index.default","cljs.core/chunk-first"],"sourcesContent":["(ns main.core.components.plan-info\r\n  (:require [re-frame.core :as re-frame]\r\n            [reagent.core :as r]\r\n            [main.core.components.tasks-manager :refer [task-manager]]\r\n            [\"@mui/material/Checkbox\" :default Checkbox]\r\n            [\"@mui/material/TextField\" :default InputField]\r\n            [\"@mui/material/FormControlLabel\" :default FormControlLabel]\r\n            [\"@mui/material/Button\" :default Button]\r\n            [\"@mui/material/ButtonGroup\" :default ButtonGroup]\r\n            [cljs.core :as c]))\r\n\r\n(defn edit-btn\r\n  []\r\n  [:> Button\r\n   {:variant \"contained\", :on-click #(re-frame/dispatch [:set-edit-mode true])}\r\n   \"Edit\"])\r\n\r\n(defn save-btn\r\n  [selected-item-id edited-title edited-text edited-tasks]\r\n  [:> Button\r\n   {:on-click #(do (re-frame/dispatch [:update-plan @selected-item-id\r\n                                       @edited-title @edited-text @edited-tasks])\r\n                   (re-frame/dispatch [:set-edit-mode false]))} \"Save\"])\r\n\r\n(defn back-btn\r\n  []\r\n  [:> Button {:on-click #(re-frame/dispatch [:set-edit-mode false])} \"Back\"])\r\n\r\n(defn plan-info\r\n  []\r\n  (let [edit-mode (re-frame/subscribe [:get-edit-mode])\r\n        selected-item-id (re-frame/subscribe [:get-selected-plan-id])\r\n        edited-title (r/atom nil)\r\n        edited-text (r/atom nil)\r\n        edited-tasks (r/atom nil)\r\n        last-item-id (r/atom nil)]\r\n    (fn []\r\n      (let [current-plan @(re-frame/subscribe [:get-plan-by-id\r\n                                               @selected-item-id])]\r\n        (when (and current-plan (not= @last-item-id @selected-item-id))\r\n          (reset! last-item-id @selected-item-id)\r\n          (reset! edited-title (:titel current-plan))\r\n          (reset! edited-text (:description current-plan)))\r\n        (if @selected-item-id\r\n          (if @edit-mode\r\n            [:div.plan-info-edit [:h2 \"Edit Plan\"]\r\n             [:div\r\n              {:style {:display \"flex\",\r\n                       :flexDirection \"column\",\r\n                       :gap \"10px\",\r\n                       :marginBottom \"20px\"}}\r\n              [:div.plan-title\r\n               [:> InputField\r\n                {:variant \"outlined\",\r\n                 :label \"Title\",\r\n                 :type \"text\",\r\n                 :value @edited-title,\r\n                 :on-change #(reset! edited-title (-> %\r\n                                                      .-target\r\n                                                      .-value))}]]\r\n              [:div.plan-info-content\r\n               [:> InputField\r\n                {:variant \"outlined\",\r\n                 :label \"Content\",\r\n                 :value @edited-text,\r\n                 :multiline true,\r\n                 :maxRows 4,\r\n                 :on-change #(reset! edited-text (-> %\r\n                                                     .-target\r\n                                                     .-value))}]]]\r\n             [task-manager edited-tasks]\r\n             [:> ButtonGroup\r\n              {:variant \"text\",\r\n               :sx {:gap \"16px\", :margin-left \"10px\"}} [back-btn]\r\n              [save-btn selected-item-id edited-title edited-text\r\n               edited-tasks]]]\r\n            [:div.plan-info [:h2 (str (:titel current-plan))]\r\n             [:p (str (:description current-plan))]\r\n             [:div.tasks-info [:h3 \"Your tasks:\"]\r\n              (if (seq (:tasks current-plan))\r\n                (for [task (:tasks current-plan)]\r\n                  ^{:key (:id task)}\r\n                  [:div.task-item\r\n                   [:> FormControlLabel\r\n                    {:control (r/as-element [:> Checkbox\r\n                                             {:checked (:is-completed task),\r\n                                              :on-change\r\n                                                #(re-frame/dispatch\r\n                                                   [:toggle-task-completion\r\n                                                    @selected-item-id\r\n                                                    (:id task)])}]),\r\n                     :label (:description task)}]])\r\n                [:p \"No tasks available.\"])] [edit-btn]])\r\n          [:p \"Select a plan to see details\"])))))\r\n"]}