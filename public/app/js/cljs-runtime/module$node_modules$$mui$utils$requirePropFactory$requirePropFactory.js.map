{
"version":3,
"file":"module$node_modules$$mui$utils$requirePropFactory$requirePropFactory.js",
"lineCount":11,
"mappings":"AAAAA,cAAA,CAAA,oEAAA,GAAyF,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAGjIC,QAAOC,CAAAA,cAAP,CAAsBF,OAAtB,EAA+B,YAA/B,EAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAAA;AAGAH,SAAQI,CAAAA,OAAR,GACAC,QAA2B,CAACC,oBAAD,EAAuBC,SAAvB,CAAkC;AAM3D,UAAMC,gBAAgBD,SAAA,GAAY,CAChC,GAAGA,SAAUE,CAAAA,SADmB,CAAZ,GAElB,IAFJ;AAiBA,WAdoBC,YAAAC,IAAgB,CAACC,KAAD,EAAQC,QAAR,EAAkBC,aAAlB,EAAiCC,QAAjC,EAA2CC,YAA3C,EAAyD,GAAGC,IAA5D,CAAA,IAAqE;AACvG,YAAMC,mBAAmBF,YAAnBE,IAAmCL,QAAzC,EACMM,qBAAqBX,aAAA,GAAgBU,gBAAhB,CAD3B;AAEA,aAAIC,kBAAJ,KACQC,aADR,GAC4BD,kBAAA,CAAmBP,KAAnB,EAA0BC,QAA1B,EAAoCC,aAApC,EAAmDC,QAAnD,EAA6DC,YAA7D,EAA2E,GAAGC,IAA9E,CAD5B,IAGWG,aAHX,GAM+B,WAA/B,KAAI,MAAOR,MAAA,CAAMC,QAAN,CAAX,IAA+CD,KAAA,CAAMF,YAAN,CAA/C,GAGO,IAHP,GACaW,KAAJ,CAAW,cAAaH,gBAAb,QAAX,GAAoD,KAAIZ,oBAAJ,2CAAmEI,YAAnE,UAApD,CAPT;AAHuG,KAczG;AAvB2D,GAD7D;AANiI,CAAjI;;",
"sources":["node_modules/@mui/utils/requirePropFactory/requirePropFactory.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$mui$utils$requirePropFactory$requirePropFactory\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = requirePropFactory;\nfunction requirePropFactory(componentNameInError, Component) {\n  if (process.env.NODE_ENV === 'production') {\n    return () => null;\n  }\n\n  // eslint-disable-next-line react/forbid-foreign-prop-types\n  const prevPropTypes = Component ? {\n    ...Component.propTypes\n  } : null;\n  const requireProp = requiredProp => (props, propName, componentName, location, propFullName, ...args) => {\n    const propFullNameSafe = propFullName || propName;\n    const defaultTypeChecker = prevPropTypes?.[propFullNameSafe];\n    if (defaultTypeChecker) {\n      const typeCheckerResult = defaultTypeChecker(props, propName, componentName, location, propFullName, ...args);\n      if (typeCheckerResult) {\n        return typeCheckerResult;\n      }\n    }\n    if (typeof props[propName] !== 'undefined' && !props[requiredProp]) {\n      return new Error(`The prop \\`${propFullNameSafe}\\` of ` + `\\`${componentNameInError}\\` can only be used together with the \\`${requiredProp}\\` prop.`);\n    }\n    return null;\n  };\n  return requireProp;\n}\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","default","requirePropFactory","componentNameInError","Component","prevPropTypes","propTypes","requiredProp","requireProp","props","propName","componentName","location","propFullName","args","propFullNameSafe","defaultTypeChecker","typeCheckerResult","Error"]
}
