{
"version":3,
"file":"module$node_modules$$mui$material$node$utils$useSlot.js",
"lineCount":19,
"mappings":"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",
"sources":["node_modules/@mui/material/node/utils/useSlot.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$mui$material$node$utils$useSlot\"] = function(global,require,module,exports) {\n\"use strict\";\n'use client';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useSlot;\nvar _useForkRef = _interopRequireDefault(require(\"@mui/utils/useForkRef\"));\nvar _appendOwnerState = _interopRequireDefault(require(\"@mui/utils/appendOwnerState\"));\nvar _resolveComponentProps = _interopRequireDefault(require(\"@mui/utils/resolveComponentProps\"));\nvar _mergeSlotProps = _interopRequireDefault(require(\"@mui/utils/mergeSlotProps\"));\n/**\n * An internal function to create a Material UI slot.\n *\n * This is an advanced version of Base UI `useSlotProps` because Material UI allows leaf component to be customized via `component` prop\n * while Base UI does not need to support leaf component customization.\n *\n * @param {string} name: name of the slot\n * @param {object} parameters\n * @returns {[Slot, slotProps]} The slot's React component and the slot's props\n *\n * Note: the returned slot's props\n * - will never contain `component` prop.\n * - might contain `as` prop.\n */\nfunction useSlot(\n/**\n * The slot's name. All Material UI components should have `root` slot.\n *\n * If the name is `root`, the logic behaves differently from other slots,\n * e.g. the `externalForwardedProps` are spread to `root` slot but not other slots.\n */\nname, parameters) {\n  const {\n    className,\n    elementType: initialElementType,\n    ownerState,\n    externalForwardedProps,\n    getSlotOwnerState,\n    internalForwardedProps,\n    ...useSlotPropsParams\n  } = parameters;\n  const {\n    component: rootComponent,\n    slots = {\n      [name]: undefined\n    },\n    slotProps = {\n      [name]: undefined\n    },\n    ...other\n  } = externalForwardedProps;\n  const elementType = slots[name] || initialElementType;\n\n  // `slotProps[name]` can be a callback that receives the component's ownerState.\n  // `resolvedComponentsProps` is always a plain object.\n  const resolvedComponentsProps = (0, _resolveComponentProps.default)(slotProps[name], ownerState);\n  const {\n    props: {\n      component: slotComponent,\n      ...mergedProps\n    },\n    internalRef\n  } = (0, _mergeSlotProps.default)({\n    className,\n    ...useSlotPropsParams,\n    externalForwardedProps: name === 'root' ? other : undefined,\n    externalSlotProps: resolvedComponentsProps\n  });\n  const ref = (0, _useForkRef.default)(internalRef, resolvedComponentsProps?.ref, parameters.ref);\n  const slotOwnerState = getSlotOwnerState ? getSlotOwnerState(mergedProps) : {};\n  const finalOwnerState = {\n    ...ownerState,\n    ...slotOwnerState\n  };\n  const LeafComponent = name === 'root' ? slotComponent || rootComponent : slotComponent;\n  const props = (0, _appendOwnerState.default)(elementType, {\n    ...(name === 'root' && !rootComponent && !slots[name] && internalForwardedProps),\n    ...(name !== 'root' && !slots[name] && internalForwardedProps),\n    ...mergedProps,\n    ...(LeafComponent && {\n      as: LeafComponent\n    }),\n    ref\n  }, finalOwnerState);\n  Object.keys(slotOwnerState).forEach(propName => {\n    delete props[propName];\n  });\n  return [elementType, props];\n}\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","default","Object","defineProperty","value","useSlot","name","parameters","className","initialElementType","ownerState","externalForwardedProps","getSlotOwnerState","internalForwardedProps","useSlotPropsParams","rootComponent","slots","undefined","slotProps","other","elementType","resolvedComponentsProps","_resolveComponentProps","slotComponent","mergedProps","internalRef","_mergeSlotProps","externalSlotProps","ref","_useForkRef","slotOwnerState","LeafComponent","props","_appendOwnerState","as","finalOwnerState","keys","forEach","propName"]
}
