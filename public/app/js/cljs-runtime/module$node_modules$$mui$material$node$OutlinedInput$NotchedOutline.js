shadow$provide.module$node_modules$$mui$material$node$OutlinedInput$NotchedOutline = function(global, require, module, exports) {
  function NotchedOutline(props) {
    const {children, classes, className, label, notched, ...other} = props, withLabel = null != label && "" !== label;
    props = {...props, notched, withLabel};
    return (0,_jsxRuntime.jsx)(NotchedOutlineRoot, {"aria-hidden":!0, className, ownerState:props, ...other, children:(0,_jsxRuntime.jsx)(NotchedOutlineLegend, {ownerState:props, children:withLabel ? (0,_jsxRuntime.jsx)("span", {children:label}) : _span || (_span = (0,_jsxRuntime.jsx)("span", {className:"notranslate", children:"â€‹"}))})});
  }
  "use client";
  module = require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard").default;
  global = require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;
  Object.defineProperty(exports, "__esModule", {value:!0});
  exports.default = NotchedOutline;
  module(require("module$node_modules$react$index"));
  exports = global(require("module$node_modules$prop_types$index"));
  module = global(require("module$node_modules$$mui$material$node$styles$rootShouldForwardProp"));
  var _zeroStyled = require("module$node_modules$$mui$material$node$zero_styled$index");
  global = global(require("module$node_modules$$mui$material$node$utils$memoTheme"));
  var _jsxRuntime = require("module$node_modules$react$jsx_runtime"), _span;
  const NotchedOutlineRoot = (0,_zeroStyled.styled)("fieldset", {shouldForwardProp:module.default})({textAlign:"left", position:"absolute", bottom:0, right:0, top:-5, left:0, margin:0, padding:"0 8px", pointerEvents:"none", borderRadius:"inherit", borderStyle:"solid", borderWidth:1, overflow:"hidden", minWidth:"0%"}), NotchedOutlineLegend = (0,_zeroStyled.styled)("legend", {shouldForwardProp:module.default})((0,global.default)(({theme}) => ({float:"unset", width:"auto", overflow:"hidden", variants:[{props:({ownerState}) => 
  !ownerState.withLabel, style:{padding:0, lineHeight:"11px", transition:theme.transitions.create("width", {duration:150, easing:theme.transitions.easing.easeOut})}}, {props:({ownerState}) => ownerState.withLabel, style:{display:"block", padding:0, height:11, fontSize:"0.75em", visibility:"hidden", maxWidth:0.01, transition:theme.transitions.create("max-width", {duration:50, easing:theme.transitions.easing.easeOut}), whiteSpace:"nowrap", "\x26 \x3e span":{paddingLeft:5, paddingRight:5, display:"inline-block", 
  opacity:0, visibility:"visible"}}}, {props:({ownerState}) => ownerState.withLabel && ownerState.notched, style:{maxWidth:"100%", transition:theme.transitions.create("max-width", {duration:100, easing:theme.transitions.easing.easeOut, delay:50})}}]})));
  NotchedOutline.propTypes = {children:exports.default.node, classes:exports.default.object, className:exports.default.string, label:exports.default.node, notched:exports.default.bool.isRequired, style:exports.default.object};
};

//# sourceMappingURL=module$node_modules$$mui$material$node$OutlinedInput$NotchedOutline.js.map
