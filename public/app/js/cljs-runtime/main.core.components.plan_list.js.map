{"version":3,"sources":["main/core/components/plan_list.cljs"],"mappings":"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","names":["main.core.components.plan-list/add-btn","js/module$node_modules$$mui$icons_material$PlaylistAdd.default","re-frame.core/dispatch","main.core.components.plan-list/delete-btn","item-id","js/module$node_modules$$mui$icons_material$DeleteOutline.default","main.core.components.plan-list/list-element","item","plan","re_frame.core.subscribe","current-plan-id","edit-mode","cljs.core/deref","cljs.core._EQ_","cljs.core/not","js/console.log","and__5000__auto__","cljs.core.not_EQ_","main.core.components.plan-list/plan-list","pl","cljs.core/empty?","iter__5480__auto__","s__27666","cljs.core/LazySeq","temp__5804__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__5478__auto__","size__5479__auto__","cljs.core/count","b__27668","cljs.core/chunk-buffer","i__27667","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__27665","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","cljs.core/chunk-first"],"sourcesContent":["(ns main.core.components.plan-list\r\n  (:require [\"@mui/material/Fab\" :default Fab]\r\n            [\"@mui/icons-material/DeleteOutline\" :default DeleteOutline]\r\n            [\"@mui/icons-material/PlaylistAdd\" :default PlaylistAdd]\r\n            [re-frame.core :as re-frame]))\r\n\r\n(defn add-btn\r\n  []\r\n  [:> PlaylistAdd\r\n   {:sx {:color \"#D3D3D3\" \r\n         \"&:hover\" {:color \"#1877f2\", :cursor \"pointer\"}\r\n         :margin-left \"10px\"},\r\n    :size \"medium\",\r\n    :variant \"outlined\",\r\n    :onClick #(re-frame/dispatch [:add-item])} \"+\"])\r\n\r\n(defn delete-btn\r\n  [item-id]\r\n  [:> DeleteOutline\r\n   {:sx {:color \"#D3D3D3\", \r\n         \"&:hover\" {:color \"#ff0000\", \r\n                    :cursor \"pointer\"}}, \r\n    :on-click #(re-frame/dispatch [:delete-item item-id])}])\r\n\r\n(defn list-element\r\n  [item]\r\n  (let [plan (re-frame/subscribe [:get-plan-by-id (:id item)])\r\n        current-plan-id (re-frame/subscribe [:get-selected-plan-id])\r\n        edit-mode (re-frame/subscribe [:get-edit-mode])]\r\n    (fn [] [:div.list-element\r\n            {:class (when (= (:id item) @current-plan-id) \"highlight\"),\r\n             :on-click\r\n               (when (or (not @edit-mode) (= (:id item) @current-plan-id))\r\n                 #(do (re-frame/dispatch [:set-selected-plan-id (:id item)])\r\n                      (js/console.log \"This item id:\" (:id item)))),\r\n             :style {:pointer-events\r\n                       (if (and @edit-mode (not= (:id item) @current-plan-id))\r\n                         \"none\" ;; \u7981\u7528\u70b9\u51fb\r\n                         \"auto\"),\r\n                     :opacity (if (and @edit-mode\r\n                                       (not= (:id item) @current-plan-id))\r\n                                0.5 ;; \u8bbe\u7f6e\u4e0d\u53ef\u70b9\u51fb\u7684\u5143\u7d20\u4e3a\u534a\u900f\u660e\r\n                                1)}}\r\n            [:div.list-element-header [:h4.list-element-title (:titel @plan)]\r\n             [:div.list-element-buttons [delete-btn (:id item)]]]])))\r\n\r\n\r\n(defn plan-list\r\n  []\r\n  (let [pl (re-frame/subscribe [:get-plan-list])]\r\n    (fn [] [:div.plan-list\r\n            [:div {:style {:display \"flex\", :alignItems \"center\"}} \r\n             [:p \"Current Plan\"] [add-btn]] \r\n            (if (empty? @pl)\r\n              [:h3 \"You have no plan\"]\r\n              (for [item @pl] ^{:key (:id item)} [list-element item]))])))"]}