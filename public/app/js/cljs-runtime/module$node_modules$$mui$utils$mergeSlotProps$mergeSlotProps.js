shadow$provide.module$node_modules$$mui$utils$mergeSlotProps$mergeSlotProps = function(global, require, module, exports) {
  global = require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;
  Object.defineProperty(exports, "__esModule", {value:!0});
  exports.default = void 0;
  var _clsx = global(require("module$node_modules$clsx$dist$clsx")), _extractEventHandlers = global(require("module$node_modules$$mui$utils$extractEventHandlers$index")), _omitEventHandlers = global(require("module$node_modules$$mui$utils$omitEventHandlers$index"));
  exports.default = function(parameters) {
    const {getSlotProps, additionalProps, externalSlotProps, externalForwardedProps, className} = parameters;
    if (!getSlotProps) {
      parameters = (0,_clsx.default)(additionalProps?.className, className, externalForwardedProps?.className, externalSlotProps?.className);
      var mergedStyle$jscomp$0 = {...additionalProps?.style, ...externalForwardedProps?.style, ...externalSlotProps?.style}, props = {...additionalProps, ...externalForwardedProps, ...externalSlotProps};
      0 < parameters.length && (props.className = parameters);
      0 < Object.keys(mergedStyle$jscomp$0).length && (props.style = mergedStyle$jscomp$0);
      return {props, internalRef:void 0};
    }
    props = (0,_extractEventHandlers.default)({...externalForwardedProps, ...externalSlotProps});
    parameters = (0,_omitEventHandlers.default)(externalSlotProps);
    mergedStyle$jscomp$0 = (0,_omitEventHandlers.default)(externalForwardedProps);
    props = getSlotProps(props);
    const joinedClasses = (0,_clsx.default)(props?.className, additionalProps?.className, className, externalForwardedProps?.className, externalSlotProps?.className), mergedStyle = {...props?.style, ...additionalProps?.style, ...externalForwardedProps?.style, ...externalSlotProps?.style};
    parameters = {...props, ...additionalProps, ...mergedStyle$jscomp$0, ...parameters};
    0 < joinedClasses.length && (parameters.className = joinedClasses);
    0 < Object.keys(mergedStyle).length && (parameters.style = mergedStyle);
    return {props:parameters, internalRef:props.ref};
  };
};

//# sourceMappingURL=module$node_modules$$mui$utils$mergeSlotProps$mergeSlotProps.js.map
