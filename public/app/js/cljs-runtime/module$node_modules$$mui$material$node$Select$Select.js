shadow$provide.module$node_modules$$mui$material$node$Select$Select = function(global, require, module, exports) {
  "use client";
  module = require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;
  global = require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard").default;
  Object.defineProperty(exports, "__esModule", {value:!0});
  exports.default = void 0;
  var React = global(require("module$node_modules$react$index"));
  global = module(require("module$node_modules$prop_types$index"));
  var _clsx = module(require("module$node_modules$clsx$dist$clsx")), _deepmerge = module(require("module$node_modules$$mui$utils$deepmerge$index")), _getReactElementRef = module(require("module$node_modules$$mui$utils$getReactElementRef$index")), _SelectInput = module(require("module$node_modules$$mui$material$node$Select$SelectInput")), _formControlState = module(require("module$node_modules$$mui$material$node$FormControl$formControlState")), _useFormControl = module(require("module$node_modules$$mui$material$node$FormControl$useFormControl")), 
  _ArrowDropDown = module(require("module$node_modules$$mui$material$node$internal$svg_icons$ArrowDropDown")), _Input = module(require("module$node_modules$$mui$material$node$Input$index")), _NativeSelectInput = module(require("module$node_modules$$mui$material$node$NativeSelect$NativeSelectInput")), _FilledInput = module(require("module$node_modules$$mui$material$node$FilledInput$index")), _OutlinedInput = module(require("module$node_modules$$mui$material$node$OutlinedInput$index")), _DefaultPropsProvider = 
  require("module$node_modules$$mui$material$node$DefaultPropsProvider$index"), _useForkRef = module(require("module$node_modules$$mui$material$node$utils$useForkRef")), _zeroStyled = require("module$node_modules$$mui$material$node$zero_styled$index"), _rootShouldForwardProp = module(require("module$node_modules$$mui$material$node$styles$rootShouldForwardProp")), _jsxRuntime = require("module$node_modules$react$jsx_runtime");
  require = {name:"MuiSelect", overridesResolver:(props, styles) => styles.root, shouldForwardProp:prop => (0,_rootShouldForwardProp.default)(prop) && "variant" !== prop, slot:"Root"};
  const StyledInput = (0,_zeroStyled.styled)(_Input.default, require)(""), StyledOutlinedInput = (0,_zeroStyled.styled)(_OutlinedInput.default, require)(""), StyledFilledInput = (0,_zeroStyled.styled)(_FilledInput.default, require)("");
  require = React.forwardRef(function(inProps, ref) {
    var props = (0,_DefaultPropsProvider.useDefaultProps)({name:"MuiSelect", props:inProps});
    const {autoWidth = !1, children, classes:classesProp = {}, className, defaultOpen = !1, displayEmpty = !1, IconComponent = _ArrowDropDown.default, id, input, inputProps, label, labelId, MenuProps, multiple = !1, native = !1, onClose, onOpen, open, renderValue, SelectDisplayProps, variant:variantProp = "outlined", ...other} = props;
    inProps = native ? _NativeSelectInput.default : _SelectInput.default;
    var muiFormControl = (0,_useFormControl.default)();
    muiFormControl = (0,_formControlState.default)({props, muiFormControl, states:["variant", "error"]});
    const variant = muiFormControl.variant || variantProp;
    var ownerState = {...props, variant, classes:classesProp};
    ({classes:props} = ownerState);
    const {root, ...restOfClasses} = props;
    ownerState = input || {standard:(0,_jsxRuntime.jsx)(StyledInput, {ownerState}), outlined:(0,_jsxRuntime.jsx)(StyledOutlinedInput, {label, ownerState}), filled:(0,_jsxRuntime.jsx)(StyledFilledInput, {ownerState})}[variant];
    ref = (0,_useForkRef.default)(ref, (0,_getReactElementRef.default)(ownerState));
    return (0,_jsxRuntime.jsx)(React.Fragment, {children:React.cloneElement(ownerState, {inputComponent:inProps, inputProps:{children, error:muiFormControl.error, IconComponent, variant, type:void 0, multiple, ...(native ? {id} : {autoWidth, defaultOpen, displayEmpty, labelId, MenuProps, onClose, onOpen, open, renderValue, SelectDisplayProps:{id, ...SelectDisplayProps}}), ...inputProps, classes:inputProps ? (0,_deepmerge.default)(restOfClasses, inputProps.classes) : restOfClasses, ...(input ? input.props.inputProps : 
    {})}, ...((multiple && native || displayEmpty) && "outlined" === variant ? {notched:!0} : {}), ref, className:(0,_clsx.default)(ownerState.props.className, className, props.root), ...(!input && {variant}), ...other})});
  });
  require.propTypes = {autoWidth:global.default.bool, children:global.default.node, classes:global.default.object, className:global.default.string, defaultOpen:global.default.bool, defaultValue:global.default.any, displayEmpty:global.default.bool, IconComponent:global.default.elementType, id:global.default.string, input:global.default.element, inputProps:global.default.object, label:global.default.node, labelId:global.default.string, MenuProps:global.default.object, multiple:global.default.bool, 
  native:global.default.bool, onChange:global.default.func, onClose:global.default.func, onOpen:global.default.func, open:global.default.bool, renderValue:global.default.func, SelectDisplayProps:global.default.object, sx:global.default.oneOfType([global.default.arrayOf(global.default.oneOfType([global.default.func, global.default.object, global.default.bool])), global.default.func, global.default.object]), value:global.default.oneOfType([global.default.oneOf([""]), global.default.any]), variant:global.default.oneOf(["filled", 
  "outlined", "standard"])};
  require.muiName = "Select";
  exports.default = require;
};

//# sourceMappingURL=module$node_modules$$mui$material$node$Select$Select.js.map
