{
"version":3,
"file":"module$node_modules$$mui$material$node$styles$createGetSelector.js",
"lineCount":35,
"mappings":"AAAAA,cAAA,CAAA,+DAAA,GAAoF,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAGxHC,QAAAA,GAAyBH,OAAA,CAAQ,kEAAR,CAAwDI,CAAAA,OAAjFD;AACJE,QAAOC,CAAAA,cAAP,CAAsBJ,OAAtB,EAA+B,YAA/B,EAA6C,CAC3CK,MAAO,CAAA,CADoC,CAA7C,CAAA;AAGAL,SAAQE,CAAAA,OAAR,GAAkB,IAAK,EAAvB;AACA,MAAII,4BAA4BL,MAAA,CAAuBH,OAAA,CAAQ,wEAAR,CAAvB,CAAhC;AA4DAE,SAAQE,CAAAA,OAAR,GA3DeK,KAAAC,IAAS,CAACC,WAAD,EAAcC,GAAd,CAAA,IAAsB;AAC5C,UAAMC,OAAOJ,KAAMK,CAAAA,YAAbD,IAA6B,OAAnC,EACME,WAAWN,KAAMO,CAAAA,mBADvB;AAEA,QAAIC,OAAOF,QAAX;AACiB,WAAjB,KAAIA,QAAJ,KACEE,IADF,GACS,KADT;AAGiB,UAAjB,KAAIF,QAAJ,KACEE,IADF,GACS,WADT;AAGIF,YAAUG,EAAAA,UAAV,CAAqB,OAArB,CAAJ,IAAqC,CAACH,QAASI,CAAAA,QAAT,CAAkB,IAAlB,CAAtC,KAEEF,IAFF,GAEU,IAAGF,QAAH,QAFV;AAIA,QAAIN,KAAMW,CAAAA,kBAAV,KAAiCT,WAAjC,CAA8C;AAC5C,UAAoB,MAApB,KAAIA,WAAJ,CAA4B;AAC1B,cAAMU,oBAAoB,EAA1B;AACA,WAAIb,yBAA0BJ,CAAAA,OAA9B,EAAuCK,KAAMa,CAAAA,YAA7C,CAA2DC,CAAAA,OAA3D,CAAmEC,MAAA,IAAU;AAC3EH,2BAAA,CAAkBG,MAAlB,CAAA,GAA4BZ,GAAA,CAAIY,MAAJ,CAA5B;AACA,iBAAOZ,GAAA,CAAIY,MAAJ,CAAP;AAF2E,SAA7E,CAAA;AAIA,eAAa,OAAb,KAAIP,IAAJ,GACS,CACL,CAACJ,IAAD,EAAQD,GADH,EAEL,CAAE,qCAAF,EAAyC,CACvC,CAACC,IAAD,EAAQQ,iBAD+B,CAFpC,CADT,GAQIJ,IAAJ,GACS,CACL,CAACA,IAAKQ,CAAAA,OAAL,CAAa,IAAb,EAAmBd,WAAnB,CAAD,EAAmCU,iBAD9B,EAEL,CAAE,GAAER,IAAF,KAAWI,IAAKQ,CAAAA,OAAL,CAAa,IAAb,EAAmBd,WAAnB,CAAX,EAAF,EAAiDC,GAF5C,CADT,GAMO,CACL,CAACC,IAAD,EAAQ,CACN,GAAGD,GADG,EAEN,GAAGS,iBAFG,CADH,CAdP;AAN0B;AA2B5B,UAAIJ,IAAJ,IAAqB,OAArB,KAAYA,IAAZ;AACE,eAAQ,GAAEJ,IAAF,KAAWI,IAAKQ,CAAAA,OAAL,CAAa,IAAb,EAAmBC,MAAA,CAAOf,WAAP,CAAnB,CAAX,EAAR;AADF;AA5B4C,KAA9C,KA+BO,KAAIA,WAAJ,CAAiB;AACtB,UAAa,OAAb,KAAIM,IAAJ;AACE,eAAO,CACL,CAAE,iCAAgCS,MAAA,CAAOf,WAAP,CAAhC,GAAF,EAA2D,CACzD,CAACE,IAAD,EAAQD,GADiD,CADtD,CAAP;AADF;AAOA,UAAIK,IAAJ;AACE,eAAOA,IAAKQ,CAAAA,OAAL,CAAa,IAAb,EAAmBC,MAAA,CAAOf,WAAP,CAAnB,CAAP;AADF;AARsB;AAYxB,WAAOE,IAAP;AAzD4C,GA2D9C;AApE4H,CAA5H;;",
"sources":["node_modules/@mui/material/node/styles/createGetSelector.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$mui$material$node$styles$createGetSelector\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _excludeVariablesFromRoot = _interopRequireDefault(require(\"./excludeVariablesFromRoot\"));\nvar _default = theme => (colorScheme, css) => {\n  const root = theme.rootSelector || ':root';\n  const selector = theme.colorSchemeSelector;\n  let rule = selector;\n  if (selector === 'class') {\n    rule = '.%s';\n  }\n  if (selector === 'data') {\n    rule = '[data-%s]';\n  }\n  if (selector?.startsWith('data-') && !selector.includes('%s')) {\n    // 'data-mui-color-scheme' -> '[data-mui-color-scheme=\"%s\"]'\n    rule = `[${selector}=\"%s\"]`;\n  }\n  if (theme.defaultColorScheme === colorScheme) {\n    if (colorScheme === 'dark') {\n      const excludedVariables = {};\n      (0, _excludeVariablesFromRoot.default)(theme.cssVarPrefix).forEach(cssVar => {\n        excludedVariables[cssVar] = css[cssVar];\n        delete css[cssVar];\n      });\n      if (rule === 'media') {\n        return {\n          [root]: css,\n          [`@media (prefers-color-scheme: dark)`]: {\n            [root]: excludedVariables\n          }\n        };\n      }\n      if (rule) {\n        return {\n          [rule.replace('%s', colorScheme)]: excludedVariables,\n          [`${root}, ${rule.replace('%s', colorScheme)}`]: css\n        };\n      }\n      return {\n        [root]: {\n          ...css,\n          ...excludedVariables\n        }\n      };\n    }\n    if (rule && rule !== 'media') {\n      return `${root}, ${rule.replace('%s', String(colorScheme))}`;\n    }\n  } else if (colorScheme) {\n    if (rule === 'media') {\n      return {\n        [`@media (prefers-color-scheme: ${String(colorScheme)})`]: {\n          [root]: css\n        }\n      };\n    }\n    if (rule) {\n      return rule.replace('%s', String(colorScheme));\n    }\n  }\n  return root;\n};\nexports.default = _default;\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","default","Object","defineProperty","value","_excludeVariablesFromRoot","theme","_default","colorScheme","css","root","rootSelector","selector","colorSchemeSelector","rule","startsWith","includes","defaultColorScheme","excludedVariables","cssVarPrefix","forEach","cssVar","replace","String"]
}
