shadow$provide.module$node_modules$$mui$utils$deepmerge$deepmerge = function(global, require, module, exports) {
  function isPlainObject(item) {
    if ("object" !== typeof item || null === item) {
      return !1;
    }
    const prototype = Object.getPrototypeOf(item);
    return (null === prototype || prototype === Object.prototype || null === Object.getPrototypeOf(prototype)) && !(Symbol.toStringTag in item) && !(Symbol.iterator in item);
  }
  function deepClone(source) {
    if (!isPlainObject(source)) {
      return source;
    }
    const output = {};
    Object.keys(source).forEach(key => {
      output[key] = deepClone(source[key]);
    });
    return output;
  }
  function deepmerge(target, source, options = {clone:!0}) {
    const output = options.clone ? {...target} : target;
    isPlainObject(target) && isPlainObject(source) && Object.keys(source).forEach(key => {
      isPlainObject(source[key]) && Object.prototype.hasOwnProperty.call(target, key) && isPlainObject(target[key]) ? output[key] = deepmerge(target[key], source[key], options) : output[key] = options.clone ? isPlainObject(source[key]) ? deepClone(source[key]) : source[key] : source[key];
    });
    return output;
  }
  Object.defineProperty(exports, "__esModule", {value:!0});
  exports.default = deepmerge;
  exports.isPlainObject = isPlainObject;
};

//# sourceMappingURL=module$node_modules$$mui$utils$deepmerge$deepmerge.js.map
