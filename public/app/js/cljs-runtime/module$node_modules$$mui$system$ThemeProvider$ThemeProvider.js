shadow$provide.module$node_modules$$mui$system$ThemeProvider$ThemeProvider = function(global, require, module, exports) {
  function useThemeScoping(themeId, upperTheme, localTheme, isPrivate = !1) {
    return React.useMemo(() => {
      var resolvedTheme = themeId ? upperTheme[themeId] || upperTheme : upperTheme;
      if ("function" === typeof localTheme) {
        resolvedTheme = localTheme(resolvedTheme);
        const result = themeId ? {...upperTheme, [themeId]:resolvedTheme} : resolvedTheme;
        return isPrivate ? () => result : result;
      }
      return themeId ? {...upperTheme, [themeId]:localTheme} : {...upperTheme, ...localTheme};
    }, [themeId, upperTheme, localTheme, isPrivate]);
  }
  function ThemeProvider(props) {
    const {children, theme:localTheme, themeId} = props;
    var upperTheme = (0,_useThemeWithoutDefault.default)(EMPTY_THEME);
    props = (0,_privateTheming.useTheme)() || EMPTY_THEME;
    (null === upperTheme && "function" === typeof localTheme || themeId && upperTheme && !upperTheme[themeId] && "function" === typeof localTheme) && console.error("MUI: You are providing a theme function prop to the ThemeProvider component:\n\x3cThemeProvider theme\x3d{outerTheme \x3d\x3e outerTheme} /\x3e\n\nHowever, no outer theme is present.\nMake sure a theme is already injected higher in the React tree or provide a theme object.");
    upperTheme = useThemeScoping(themeId, upperTheme, localTheme);
    props = useThemeScoping(themeId, props, localTheme, !0);
    return (0,_jsxRuntime.jsx)(_privateTheming.ThemeProvider, {theme:props, children:(0,_jsxRuntime.jsx)(_styledEngine.ThemeContext.Provider, {value:upperTheme, children:(0,_jsxRuntime.jsx)(_RtlProvider.default, {value:"rtl" === upperTheme.direction, children:(0,_jsxRuntime.jsx)(_DefaultPropsProvider.default, {value:upperTheme?.components, children})})})});
  }
  "use client";
  global = require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;
  module = require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard").default;
  Object.defineProperty(exports, "__esModule", {value:!0});
  exports.default = void 0;
  var React = module(require("module$node_modules$react$index"));
  module = global(require("module$node_modules$prop_types$index"));
  var _privateTheming = require("module$node_modules$$mui$private_theming$node$index"), _exactProp = global(require("module$node_modules$$mui$utils$exactProp$index")), _styledEngine = require("module$node_modules$$mui$styled_engine$node$index"), _useThemeWithoutDefault = global(require("module$node_modules$$mui$system$useThemeWithoutDefault$index")), _RtlProvider = global(require("module$node_modules$$mui$system$RtlProvider$index")), _DefaultPropsProvider = global(require("module$node_modules$$mui$system$DefaultPropsProvider$index")), 
  _jsxRuntime = require("module$node_modules$react$jsx_runtime");
  const EMPTY_THEME = {};
  ThemeProvider.propTypes = {children:module.default.node, theme:module.default.oneOfType([module.default.func, module.default.object]).isRequired, themeId:module.default.string};
  ThemeProvider.propTypes = (0,_exactProp.default)(ThemeProvider.propTypes);
  exports.default = ThemeProvider;
};

//# sourceMappingURL=module$node_modules$$mui$system$ThemeProvider$ThemeProvider.js.map
