shadow$provide.module$node_modules$$mui$material$node$Paper$Paper = function(global, require, module, exports) {
  "use client";
  global = require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;
  module = require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard").default;
  Object.defineProperty(exports, "__esModule", {value:!0});
  exports.default = void 0;
  var React = module(require("module$node_modules$react$index"));
  module = global(require("module$node_modules$prop_types$index"));
  var _clsx = global(require("module$node_modules$clsx$dist$clsx")), _integerPropType = global(require("module$node_modules$$mui$utils$integerPropType$index")), _chainPropTypes = global(require("module$node_modules$$mui$utils$chainPropTypes$index")), _composeClasses = global(require("module$node_modules$$mui$utils$composeClasses$index")), _colorManipulator = require("module$node_modules$$mui$system$colorManipulator$index"), _zeroStyled = require("module$node_modules$$mui$material$node$zero_styled$index"), 
  _memoTheme = global(require("module$node_modules$$mui$material$node$utils$memoTheme")), _DefaultPropsProvider = require("module$node_modules$$mui$material$node$DefaultPropsProvider$index"), _getOverlayAlpha = global(require("module$node_modules$$mui$material$node$styles$getOverlayAlpha")), _paperClasses = require("module$node_modules$$mui$material$node$Paper$paperClasses"), _jsxRuntime = require("module$node_modules$react$jsx_runtime");
  const PaperRoot = (0,_zeroStyled.styled)("div", {name:"MuiPaper", slot:"Root", overridesResolver:(props, styles) => {
    ({ownerState:props} = props);
    return [styles.root, styles[props.variant], !props.square && styles.rounded, "elevation" === props.variant && styles[`elevation${props.elevation}`]];
  }})((0,_memoTheme.default)(({theme}) => ({backgroundColor:(theme.vars || theme).palette.background.paper, color:(theme.vars || theme).palette.text.primary, transition:theme.transitions.create("box-shadow"), variants:[{props:({ownerState}) => !ownerState.square, style:{borderRadius:theme.shape.borderRadius}}, {props:{variant:"outlined"}, style:{border:`1px solid ${(theme.vars || theme).palette.divider}`}}, {props:{variant:"elevation"}, style:{boxShadow:"var(--Paper-shadow)", backgroundImage:"var(--Paper-overlay)"}}]})));
  require = React.forwardRef(function(inProps, ref) {
    var props = (0,_DefaultPropsProvider.useDefaultProps)({props:inProps, name:"MuiPaper"});
    inProps = (0,_zeroStyled.useTheme)();
    const {className, component = "div", elevation = 1, square = !1, variant = "elevation", ...other} = props;
    props = {...props, component, elevation, square, variant};
    const {square:square$jscomp$0, elevation:elevation$jscomp$0, variant:variant$jscomp$0, classes} = props;
    var JSCompiler_inline_result = (0,_composeClasses.default)({root:["root", variant$jscomp$0, !square$jscomp$0 && "rounded", "elevation" === variant$jscomp$0 && `elevation${elevation$jscomp$0}`]}, _paperClasses.getPaperUtilityClass, classes);
    void 0 === inProps.shadows[elevation] && console.error([`MUI: The elevation provided <Paper elevation={${elevation}}> is not available in the theme.`, `Please make sure that \`theme.shadows[${elevation}]\` is defined.`].join("\n"));
    return (0,_jsxRuntime.jsx)(PaperRoot, {as:component, ownerState:props, className:(0,_clsx.default)(JSCompiler_inline_result.root, className), ref, ...other, style:{...("elevation" === variant && {"--Paper-shadow":(inProps.vars || inProps).shadows[elevation], ...(inProps.vars && {"--Paper-overlay":inProps.vars.overlays?.[elevation]}), ...(!inProps.vars && "dark" === inProps.palette.mode && {"--Paper-overlay":`linear-gradient(${(0,_colorManipulator.alpha)("#fff", (0,_getOverlayAlpha.default)(elevation))}, ${(0,_colorManipulator.alpha)("#fff", 
    (0,_getOverlayAlpha.default)(elevation))})`})}), ...other.style}});
  });
  require.propTypes = {children:module.default.node, classes:module.default.object, className:module.default.string, component:module.default.elementType, elevation:(0,_chainPropTypes.default)(_integerPropType.default, props => {
    const {elevation, variant} = props;
    return 0 < elevation && "outlined" === variant ? Error(`MUI: Combining \`elevation={${elevation}}\` with \`variant="${variant}"\` has no effect. Either use \`elevation={0}\` or use a different \`variant\`.`) : null;
  }), square:module.default.bool, style:module.default.object, sx:module.default.oneOfType([module.default.arrayOf(module.default.oneOfType([module.default.func, module.default.object, module.default.bool])), module.default.func, module.default.object]), variant:module.default.oneOfType([module.default.oneOf(["elevation", "outlined"]), module.default.string])};
  exports.default = require;
};

//# sourceMappingURL=module$node_modules$$mui$material$node$Paper$Paper.js.map
