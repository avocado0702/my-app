shadow$provide.module$node_modules$$mui$material$node$styles$createColorScheme = function(global, require, module, exports) {
  function getOpacity(mode) {
    return {inputPlaceholder:"dark" === mode ? 0.5 : 0.42, inputUnderline:"dark" === mode ? 0.7 : 0.42, switchTrackDisabled:"dark" === mode ? 0.2 : 0.12, switchTrack:"dark" === mode ? 0.3 : 0.38};
  }
  function getOverlays(mode) {
    return "dark" === mode ? defaultDarkOverlays : [];
  }
  global = require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;
  Object.defineProperty(exports, "__esModule", {value:!0});
  exports.default = function(options) {
    const {palette:paletteInput = {mode:"light"}, opacity, overlays, ...rest} = options;
    options = (0,_createPalette.default)(paletteInput);
    return {palette:options, opacity:{...getOpacity(options.mode), ...opacity}, overlays:overlays || getOverlays(options.mode), ...rest};
  };
  exports.getOpacity = getOpacity;
  exports.getOverlays = getOverlays;
  var _createPalette = global(require("module$node_modules$$mui$material$node$styles$createPalette")), _getOverlayAlpha = global(require("module$node_modules$$mui$material$node$styles$getOverlayAlpha"));
  const defaultDarkOverlays = [...Array(25)].map((_, index) => {
    if (0 === index) {
      return "none";
    }
    _ = (0,_getOverlayAlpha.default)(index);
    return `linear-gradient(rgba(255 255 255 / ${_}), rgba(255 255 255 / ${_}))`;
  });
};

//# sourceMappingURL=module$node_modules$$mui$material$node$styles$createColorScheme.js.map
